{"ast":null,"code":"// Automatically generated with Reach 0.1.6 (66f7fd96)\n\n/* eslint-disable */\nexport const _version = '0.1.6';\nexport const _versionHash = '0.1.6 (66f7fd96)';\nexport const _backendVersion = 5;\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_UInt;\n  const ctc3 = stdlib.T_Bool;\n  return {\n    infos: {},\n    views: {\n      1: [ctc0, ctc1],\n      5: [ctc0, ctc1, ctc2, ctc2, ctc2, ctc2, ctc3, ctc2]\n    }\n  };\n}\n;\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n  };\n}\n;\nexport async function NormalUser(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc3, ctc4]);\n  const ctc6 = stdlib.T_Bool;\n  const v151 = stdlib.protect(ctc0, interact.name, 'for NormalUser\\'s interact field name');\n  const txn1 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v155],\n    secs: v157,\n    time: v156,\n    didSend: v25,\n    from: v154\n  } = txn1;\n  ;\n  const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v163 = undefined;\n  const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n  const txn2 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 1,\n    out_tys: [],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [],\n    secs: v174,\n    time: v173,\n    didSend: v45,\n    from: v172\n  } = txn2;\n  ;\n  const v176 = stdlib.addressEq(v154, v172);\n  stdlib.assert(v176, {\n    at: './index.rsh:58:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'NormalUser'\n  });\n  let v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n  let v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n  let v179 = v173;\n  let v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v188 = false;\n\n  while ((() => {\n    const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    return v195;\n  })()) {\n    const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n    const v199 = ctc.selfAddress();\n    stdlib.protect(ctc2, await interact.acceptToken(v164), {\n      at: './index.rsh:67:38:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'acceptToken',\n      who: 'NormalUser'\n    });\n    let v202;\n    const v203 = stdlib.eq(v186, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n\n    if (v203) {\n      v202 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n    } else {\n      const v204 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 500000000000000), v186);\n      v202 = v204;\n    }\n\n    stdlib.protect(ctc2, await interact.showBalance(v164), {\n      at: './index.rsh:71:38:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'showBalance',\n      who: 'NormalUser'\n    });\n    stdlib.protect(ctc2, await interact.displayTokenDetails(v186, v202), {\n      at: './index.rsh:72:46:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'displayTokenDetails',\n      who: 'NormalUser'\n    });\n    const v207 = stdlib.protect(ctc5, await interact.buyToken(v186, v202), {\n      at: './index.rsh:73:56:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'buyToken',\n      who: 'NormalUser'\n    });\n    const v208 = v207[stdlib.checkedBigNumberify('./index.rsh:73:13:array', stdlib.UInt_max, 0)];\n    const v209 = v207[stdlib.checkedBigNumberify('./index.rsh:73:13:array', stdlib.UInt_max, 1)];\n    const v210 = stdlib.mul(v208, v202);\n    const v212 = stdlib.le(v208, v186);\n    stdlib.assert(v212, {\n      at: './index.rsh:75:13:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: null,\n      who: 'NormalUser'\n    });\n    const v213 = stdlib.addressEq(v209, v199);\n    const txn3 = await ctc.sendrecv({\n      args: [v154, v164, v177, v178, v186, v187, v188, v197, v208, v202, v199, v209, v151, v210],\n      evt_cnt: 6,\n      funcNum: 3,\n      lct: v179,\n      onlyIf: v213,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      pay: [v210, []],\n      sim_p: async txn3 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [v215, v216, v217, v218, v219, v220],\n          secs: v222,\n          time: v221,\n          didSend: v84,\n          from: v214\n        } = txn3;\n        sim_r.txns.push({\n          amt: v220,\n          kind: 'to',\n          tok: undefined\n        });\n        const v226 = stdlib.addressEq(v214, v217);\n        stdlib.assert(v226, {\n          at: './index.rsh:89:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n        });\n        const v228 = stdlib.le(v215, v186);\n        stdlib.assert(v228, {\n          at: './index.rsh:91:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n        });\n        const v232 = stdlib.sub(v186, v215);\n        sim_r.txns.push({\n          amt: v215,\n          kind: 'from',\n          to: v214,\n          tok: v164\n        });\n        const v233 = stdlib.add(v177, v215);\n        const v234 = stdlib.add(v178, v220);\n        const cv177 = v233;\n        const cv178 = v234;\n        const cv179 = v221;\n        const cv186 = v232;\n        const cv187 = v187;\n        const cv188 = v188;\n\n        (() => {\n          const v177 = cv177;\n          const v178 = cv178;\n          const v179 = cv179;\n          const v186 = cv186;\n          const v187 = cv187;\n          const v188 = cv188;\n\n          if ((() => {\n            const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n            return v195;\n          })()) {\n            const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n            sim_r.isHalt = false;\n          } else {\n            sim_r.txns.push({\n              amt: v178,\n              kind: 'from',\n              to: v154,\n              tok: undefined\n            });\n            stdlib.simTokenBurn(sim_r, v164, v187);\n\n            if (v188) {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.isHalt = true;\n            } else {\n              stdlib.simTokenDestroy(sim_r, v164);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.isHalt = true;\n            }\n          }\n        })();\n\n        return sim_r;\n      },\n      soloSend: false,\n      timeoutAt: ['time', v197],\n      tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3, ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      waitIfNotPresent: false\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv({\n        args: [v154, v164, v177, v178, v186, v187, v188, v197],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v179,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: async txn4 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          const {\n            data: [],\n            secs: v237,\n            time: v236,\n            didSend: v107,\n            from: v235\n          } = txn4;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const cv177 = v177;\n          const cv178 = v178;\n          const cv179 = v236;\n          const cv186 = v186;\n          const cv187 = v187;\n          const cv188 = v188;\n\n          (() => {\n            const v177 = cv177;\n            const v178 = cv178;\n            const v179 = cv179;\n            const v186 = cv186;\n            const v187 = cv187;\n            const v188 = cv188;\n\n            if ((() => {\n              const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n              return v195;\n            })()) {\n              const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n              sim_r.isHalt = false;\n            } else {\n              sim_r.txns.push({\n                amt: v178,\n                kind: 'from',\n                to: v154,\n                tok: undefined\n              });\n              stdlib.simTokenBurn(sim_r, v164, v187);\n\n              if (v188) {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              } else {\n                stdlib.simTokenDestroy(sim_r, v164);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n            }\n          })();\n\n          return sim_r;\n        },\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3],\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v237,\n        time: v236,\n        didSend: v107,\n        from: v235\n      } = txn4;\n      ;\n      const cv177 = v177;\n      const cv178 = v178;\n      const cv179 = v236;\n      const cv186 = v186;\n      const cv187 = v187;\n      const cv188 = v188;\n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      continue;\n    } else {\n      const {\n        data: [v215, v216, v217, v218, v219, v220],\n        secs: v222,\n        time: v221,\n        didSend: v84,\n        from: v214\n      } = txn3;\n      ;\n      const v226 = stdlib.addressEq(v214, v217);\n      stdlib.assert(v226, {\n        at: './index.rsh:89:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n      });\n      const v228 = stdlib.le(v215, v186);\n      stdlib.assert(v228, {\n        at: './index.rsh:91:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n      });\n      const v232 = stdlib.sub(v186, v215);\n      ;\n      const v233 = stdlib.add(v177, v215);\n      const v234 = stdlib.add(v178, v220);\n      const cv177 = v233;\n      const cv178 = v234;\n      const cv179 = v221;\n      const cv186 = v232;\n      const cv187 = v187;\n      const cv188 = v188;\n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      continue;\n    }\n  }\n\n  ;\n  undefined;\n\n  if (v188) {\n    return;\n  } else {\n    undefined;\n    return;\n  }\n}\n;\nexport async function OmegaUser(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const v150 = stdlib.protect(ctc0, interact.name, 'for OmegaUser\\'s interact field name');\n  const txn1 = await ctc.sendrecv({\n    args: [v150],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:45:13:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn1 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [v155],\n        secs: v157,\n        time: v156,\n        didSend: v25,\n        from: v154\n      } = txn1;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n      const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v163 = stdlib.simTokenNew(sim_r, v159, v160, v161, v162, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), undefined);\n      const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n      sim_r.isHalt = false;\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v155],\n    secs: v157,\n    time: v156,\n    didSend: v25,\n    from: v154\n  } = txn1;\n  ;\n  const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v163 = undefined;\n  const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n  stdlib.protect(ctc2, await interact.acceptToken(v164), {\n    at: './index.rsh:54:25:application',\n    fs: ['at ./index.rsh:53:17:application call to [unknown function] (defined at: ./index.rsh:53:21:function exp)'],\n    msg: 'acceptToken',\n    who: 'OmegaUser'\n  });\n  let v169;\n  const v170 = stdlib.eq(stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n\n  if (v170) {\n    v169 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n  } else {\n    const v171 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 500000000000000), stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    v169 = v171;\n  }\n\n  stdlib.protect(ctc2, await interact.displayTokenDetails(stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), v169), {\n    at: './index.rsh:55:44:application',\n    fs: ['at ./index.rsh:53:17:application call to [unknown function] (defined at: ./index.rsh:53:21:function exp)'],\n    msg: 'displayTokenDetails',\n    who: 'OmegaUser'\n  });\n  const txn2 = await ctc.sendrecv({\n    args: [v154, v164],\n    evt_cnt: 0,\n    funcNum: 1,\n    lct: v156,\n    onlyIf: true,\n    out_tys: [],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn2 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [],\n        secs: v174,\n        time: v173,\n        didSend: v45,\n        from: v172\n      } = txn2;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v176 = stdlib.addressEq(v154, v172);\n      stdlib.assert(v176, {\n        at: './index.rsh:58:13:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'OmegaUser'\n      });\n      const v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n      const v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n      const v179 = v173;\n      const v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n      const v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n      const v188 = false;\n\n      if ((() => {\n        const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n        return v195;\n      })()) {\n        const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n        sim_r.isHalt = false;\n      } else {\n        sim_r.txns.push({\n          amt: v178,\n          kind: 'from',\n          to: v154,\n          tok: undefined\n        });\n        stdlib.simTokenBurn(sim_r, v164, v187);\n\n        if (v188) {\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n          });\n          sim_r.isHalt = true;\n        } else {\n          stdlib.simTokenDestroy(sim_r, v164);\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n          });\n          sim_r.isHalt = true;\n        }\n      }\n\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc4, ctc1],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [],\n    secs: v174,\n    time: v173,\n    didSend: v45,\n    from: v172\n  } = txn2;\n  ;\n  const v176 = stdlib.addressEq(v154, v172);\n  stdlib.assert(v176, {\n    at: './index.rsh:58:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'OmegaUser'\n  });\n  let v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n  let v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n  let v179 = v173;\n  let v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v188 = false;\n\n  while ((() => {\n    const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    return v195;\n  })()) {\n    const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n    const txn3 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 3,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      timeoutAt: ['time', v197],\n      waitIfNotPresent: false\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 4,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v237,\n        time: v236,\n        didSend: v107,\n        from: v235\n      } = txn4;\n      ;\n      const cv177 = v177;\n      const cv178 = v178;\n      const cv179 = v236;\n      const cv186 = v186;\n      const cv187 = v187;\n      const cv188 = v188;\n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      continue;\n    } else {\n      const {\n        data: [v215, v216, v217, v218, v219, v220],\n        secs: v222,\n        time: v221,\n        didSend: v84,\n        from: v214\n      } = txn3;\n      ;\n      stdlib.protect(ctc2, await interact.paidBy(v219, v215, v216, v217), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:88:30:application call to \"liftedInteract\" (defined at: ./index.rsh:88:30:application)'],\n        msg: 'paidBy',\n        who: 'OmegaUser'\n      });\n      const v226 = stdlib.addressEq(v214, v217);\n      stdlib.assert(v226, {\n        at: './index.rsh:89:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n      });\n      const v228 = stdlib.le(v215, v186);\n      stdlib.assert(v228, {\n        at: './index.rsh:91:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n      });\n      const v232 = stdlib.sub(v186, v215);\n      ;\n      const v233 = stdlib.add(v177, v215);\n      const v234 = stdlib.add(v178, v220);\n      const cv177 = v233;\n      const cv178 = v234;\n      const cv179 = v221;\n      const cv186 = v232;\n      const cv187 = v187;\n      const cv188 = v188;\n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      continue;\n    }\n  }\n\n  ;\n  undefined;\n\n  if (v188) {\n    return;\n  } else {\n    undefined;\n    return;\n  }\n}\n;\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\ndup\nint 8\nextract_uint64\nstore 2\nextract 16 32\nstore 3\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 96\n==\nassert\ndup\nextract 0 32\nstore 255\ndup\nextract 32 64\nstore 254\npop\ntxn Sender\nglobal CreatorAddress\n==\nassert\nload 255\nstore 3\n// \"CheckPay\"\n// \"./index.rsh:45:13:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:45:13:dot\"\n// \"[]\"\nint 100000\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl2_checkTxnK:\npop\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nint 0\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 100000000000\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 6\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64(RFJBAAAAAAA=)\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64(RGFhcmFDb2luAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)\ndig 1\ngtxns ConfigAssetName\n==\nassert\nint 96\nbzero\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nload 3\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\ngaids\nstore 253\nbyte base64(AAAAAAAAAKM=)\nload 253\nitob\nconcat\nlog // 16\nload 253\nstore 252\ntxn Sender\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l3_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:58:13:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:58:13:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nint 16\nbzero\nglobal Round\nitob\nconcat\nbyte base64(AAAAF0h26AA=)\nconcat\nbyte base64(AAAAF0h26AA=)\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl3_afterHandler1:\nl4_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l5_afterHandler3\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 152\n==\nassert\ndup\nint 0\nextract_uint64\nstore 247\ndup\nint 8\nextract_uint64\nstore 246\ndup\nextract 16 32\nstore 245\ndup\nextract 48 32\nstore 244\ndup\nextract 80 64\nstore 243\ndup\nint 144\nextract_uint64\nstore 242\npop\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:78:16:dot\"\n// \"[]\"\nload 242\ndup\nbz l6_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl6_checkTxnK:\npop\n// Nothing\n// \"./index.rsh:89:12:application\"\n// \"[]\"\ntxn Sender\nload 245\n==\nassert\n// Nothing\n// \"./index.rsh:91:12:application\"\n// \"[]\"\nload 247\nload 251\n<=\nassert\nload 247\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns AssetAmount\n==\nassert\nload 254\ndig 1\ngtxns XferAsset\n==\nassert\nint axfer\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\ntxn Sender\ndig 1\ngtxns AssetReceiver\n==\nassert\nl7_checkTxnK:\npop\nload 255\nload 254\nitob\nconcat\nload 253\nload 247\n+\nitob\nload 252\nload 242\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nload 247\n-\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl5_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l8_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:82:20:dot\"\n// \"[]\"\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nload 252\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl8_afterHandler4:\nint 0\nassert\nloopBody2:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\ndup\nint 24\nextract_uint64\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\ndup\nextract 40 1\nbtoi\nstore 250\npop\ndup\nextract 0 32\nstore 249\ndup\nint 32\nextract_uint64\nstore 248\npop\nload 255\nint 100000000000\n<=\nbz l9_ifF\nload 253\nint 5000\n+\nstore 247\nload 249\nload 248\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nload 247\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 81\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_ifF:\nload 254\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 249\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nload 250\nbz l11_ifF\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl12_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl11_ifF:\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 248\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl13_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nload 3\nconcat\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nglobal ZeroAddress\nstore 3\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  escrow: `#pragma version 5\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 81,\n  unsupported: [],\n  version: 5\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v155\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v155\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v215\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v216\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v217\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v218\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v219\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v220\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v163\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"oe_v163\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v215\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v216\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v217\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v218\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v219\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v220\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x6080604052604051620025d6380380620025d68339810160408190526200002691620003d8565b6000808055436003556040805160e08101825260c081018381528152815160208082018452848252808301919091528251606080820185528582528183018690528185018690528385019190915283518083018552858152818401526080830185905260a083019490945282518551815285820151518051828401529091015181840152915190927f819125e79b475e13c17f8bbe764be761fb45f83700d23d01d0548e85c578b478928290030190a1620000e434156007620002c3565b8051682230b0b930a1b7b4b760b91b90526020808201516244524160e81b90526040808301805160009081905281518401819052905182018190526060840151528251518151928301520160408051601f1981840301815290829052602083810151516001600160c01b031916908301529060280160408051808303601f1901815282825284820151805160208083015192850151908601919091529284015260608301919091529060800160408051601f198184030181528282526060860151516020840152910160405160208183030381529060405264174876e8006012604051620001d290620002ed565b620001e396959493929190620004bb565b604051809103906000f08015801562000200573d6000803e3d6000fd5b506001600160a01b03166080820181905260a082018190526040519081527f57b259bff0a962eb516f03a0da6db7c0210c47ba345e2aec2ca99d85ed8350319060200160405180910390a1604080518082018252600060208083018281523380855260a08701516001600160a01b0390811683526001948590554390945585519283015251909116928101929092529060600160405160208183030381529060405260029080519060200190620002b9929190620002fb565b5050505062000563565b81620002e95760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b610f75806200166183390190565b828054620003099062000526565b90600052602060002090601f0160209004810192826200032d576000855562000378565b82601f106200034857805160ff191683800117855562000378565b8280016001018555821562000378579182015b82811115620003785782518255916020019190600101906200035b565b50620003869291506200038a565b5090565b5b808211156200038657600081556001016200038b565b604080519081016001600160401b0381118282101715620003d257634e487b7160e01b600052604160045260246000fd5b60405290565b60008183036060811215620003ec57600080fd5b620003f6620003a1565b835181526040601f19830112156200040d57600080fd5b6040519150602082016001600160401b03811183821017156200044057634e487b7160e01b600052604160045260246000fd5b6040526200044d620003a1565b60208581015182526040909501518186015282529283015250919050565b6000815180845260005b81811015620004935760208185018101518683018201520162000475565b81811115620004a6576000602083870101525b50601f01601f19169290920160200192915050565b60c081526000620004d060c08301896200046b565b8281036020840152620004e481896200046b565b90508281036040840152620004fa81886200046b565b905082810360608401526200051081876200046b565b6080840195909552505060a00152949350505050565b600181811c908216806200053b57607f821691505b602082108114156200055d57634e487b7160e01b600052602260045260246000fd5b50919050565b6110ee80620005736000396000f3fe6080604052600436106100565760003560e01c80630d19a5fb1461005f5780631e93b0f1146100725780637963168e1461009657806383230757146100a95780639afc5bcc146100be578063ab53f2c6146100d157005b3661005d57005b005b61005d61006d366004610d57565b6100f4565b34801561007e57600080fd5b506003545b6040519081526020015b60405180910390f35b61005d6100a4366004610d57565b6102a2565b3480156100b557600080fd5b50600154610083565b61005d6100cc366004610d6f565b610436565b3480156100dd57600080fd5b506100e6610666565b60405161008d929190610dae565b6101046005600054146013610703565b61011e8135158061011757506001548235145b6014610703565b60008080556002805461013090610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610de8565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610e5b565b90506101d58160e001514310156015610703565b7f64c05390f66d4c96d69b55a2d6f7bb5135997731e2b63f4a719a786bc0579627826040516102049190610f13565b60405180910390a161021834156012610703565b610220610c26565b815181516001600160a01b039182169052602080840151835192169181019190915260408084015182840180519190915260608086015182519094019390935280514392019190915260808085015182519093019290925260a08085015182519093019290925260c0840151905190151591015261029d8161072d565b505050565b6102b2600160005414600a610703565b6102cc813515806102c557506001548235145b600b610703565b6000808055600280546102de90610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90610de8565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b505050505080602001905181019061036f9190610f38565b90507f9f41c6cf17ede288cbb2cfbbafdd05b2b2025dea3b047cdb79dbc892d7a9286d826040516103a09190610f13565b60405180910390a16103b434156008610703565b80516103cc906001600160a01b031633146009610703565b6103d4610c26565b815181516001600160a01b039182169052602080840151835192169181019190915280820180516000908190528151909201829052805143604090910152805164174876e80060609091018190528151608001525160a0015261029d8161072d565b610446600560005414600f610703565b6104608135158061045957506001548235145b6010610703565b60008080556002805461047290610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461049e90610de8565b80156104eb5780601f106104c0576101008083540402835291602001916104eb565b820191906000526020600020905b8154815290600101906020018083116104ce57829003601f168201915b50505050508060200190518101906105039190610e5b565b90506105168160e0015143106011610703565b7fe3dd4d1e92f956195cdb05d6bf62cc37b6a849b951ebec81f91722b37d7ef9a8826040516105459190610fa5565b60405180910390a161055e3460e084013514600c610703565b61058c610571608084016060850161101d565b6001600160a01b0316336001600160a01b031614600d610703565b60808101516105a39060208401351115600e610703565b6105b98160200151338460200160000135610957565b6105c1610c26565b815181516001600160a01b039182169052602080840151835192169181019190915260408301516105f59185013590611050565b602082015152606082015161060f9060e085013590611050565b6020808301805182019290925290514360409091015260808301516106379185013590611068565b6020820180516060019190915260a08084015182516080015260c0840151915191151591015261029d8161072d565b60006060600054600280805461067b90610de8565b80601f01602080910402602001604051908101604052809291908181526020018280546106a790610de8565b80156106f45780601f106106c9576101008083540402835291602001916106f4565b820191906000526020600020905b8154815290600101906020018083116106d757829003601f168201915b50505050509050915091509091565b816107295760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b5050565b60408051602081019091526000815260208201515164174876e800106108b2576113888260200151604001516107639190611050565b81526040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091528251516001600160a01b0390811682528351602090810151909116818301528084018051516040808501919091528151830151606080860191909152825101516080808601919091528251015160a080860191909152915190910151151560c0840152835160e0840152600560005543600155516108889183910160006101008201905060018060a01b038084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151151560c083015260e083015160e083015292915050565b604051602081830303815290604052600290805190602001906108ac929190610c88565b50505050565b81515160208084015101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156108f3573d6000803e3d6000fd5b5061090e82600001516020015183602001516080015161096b565b816020015160a0015115610932576000808055600181905561072990600290610d0c565b8151602001516109419061097e565b6000808055600181905561072990600290610d0c565b610962838383610993565b61029d57600080fd5b6109758282610a64565b61072957600080fd5b61098781610b3f565b61099057600080fd5b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839283929188169183916109f29161107f565b60006040518083038185875af1925050503d8060008114610a2f576040519150601f19603f3d011682016040523d82523d6000602084013e610a34565b606091505b5091509150610a4582826002610be4565b5080806020019051810190610a5a919061109b565b9695505050505050565b6000806000846001600160a01b031660006342966c6860e01b86604051602401610a9091815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ace919061107f565b60006040518083038185875af1925050503d8060008114610b0b576040519150601f19603f3d011682016040523d82523d6000602084013e610b10565b606091505b5091509150610b2182826003610be4565b5080806020019051810190610b36919061109b565b95945050505050565b60408051600481526024810182526020810180516001600160e01b031663083197ef60e41b1790529051600091829182916001600160a01b038616918391610b869161107f565b60006040518083038185875af1925050503d8060008114610bc3576040519150601f19603f3d011682016040523d82523d6000602084013e610bc8565b606091505b5091509150610bd982826004610be4565b506001949350505050565b60608315610bf3575081610c1f565b825115610c035782518084602001fd5b60405163100960cb60e01b815260048101839052602401610720565b9392505050565b60408051608081018252600091810182815260608201929092529081908152602001610c836040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054610c9490610de8565b90600052602060002090601f016020900481019282610cb65760008555610cfc565b82601f10610ccf57805160ff1916838001178555610cfc565b82800160010185558215610cfc579182015b82811115610cfc578251825591602001919060010190610ce1565b50610d08929150610d42565b5090565b508054610d1890610de8565b6000825580601f10610d28575050565b601f01602090049060005260206000209081019061099091905b5b80821115610d085760008155600101610d43565b600060408284031215610d6957600080fd5b50919050565b60006101008284031215610d6957600080fd5b60005b83811015610d9d578181015183820152602001610d85565b838111156108ac5750506000910152565b8281526040602082015260008251806040840152610dd3816060850160208701610d82565b601f01601f1916919091016060019392505050565b600181811c90821680610dfc57607f821691505b60208210811415610d6957634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461099057600080fd5b8051610e3d81610e1d565b919050565b801515811461099057600080fd5b8051610e3d81610e42565b6000610100808385031215610e6f57600080fd5b6040519081019067ffffffffffffffff82118183101715610ea057634e487b7160e01b600052604160045260246000fd5b8160405283519150610eb182610e1d565b818152610ec060208501610e32565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152610ef960c08501610e50565b60c082015260e084015160e0820152809250505092915050565b81358152604081016020830135610f2981610e42565b80151560208401525092915050565b600060408284031215610f4a57600080fd5b6040516040810181811067ffffffffffffffff82111715610f7b57634e487b7160e01b600052604160045260246000fd5b6040528251610f8981610e1d565b81526020830151610f9981610e1d565b60208201529392505050565b81358152602080830135908201526040808301359082015261010081016060830135610fd081610e1d565b6001600160a01b039081166060840152608084013590610fef82610e1d565b8082166080850152505060a083013560a083015260c083013560c083015260e083013560e083015292915050565b60006020828403121561102f57600080fd5b8135610c1f81610e1d565b634e487b7160e01b600052601160045260246000fd5b600082198211156110635761106361103a565b500190565b60008282101561107a5761107a61103a565b500390565b60008251611091818460208701610d82565b9190910192915050565b6000602082840312156110ad57600080fd5b8151610c1f81610e4256fea26469706673582212205bee7a2fc824d99e14881e6e11b1141da39914739a9612fee97b32cbabf0d61c64736f6c6343000809003360806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea26469706673582212202084fb605e105444e5af502915c055fef60462317d4122acfb076376ea68678d64736f6c63430008090033`,\n  BytecodeLen: 9686,\n  Which: `oD`,\n  version: 5,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\nexport const _Participants = {\n  \"NormalUser\": NormalUser,\n  \"OmegaUser\": OmegaUser\n};\nexport const _APIs = {};","map":{"version":3,"sources":["/home/paradoxfly/reach/bonding-curve-sale/src/build/index.main.mjs"],"names":["_version","_versionHash","_backendVersion","getExports","s","stdlib","reachStdlib","_getViews","viewlib","ctc0","T_Address","ctc1","T_Token","ctc2","T_UInt","ctc3","T_Bool","infos","views","_getMaps","T_Tuple","mapDataTy","NormalUser","ctcTop","interact","_initialize","undefined","Promise","reject","Error","ctc","T_Bytes","checkedBigNumberify","UInt_max","T_Null","ctc4","ctc5","ctc6","v151","protect","name","txn1","recv","didSend","evt_cnt","funcNum","out_tys","timeoutAt","waitIfNotPresent","data","v155","secs","v157","time","v156","v25","from","v154","v159","v160","v161","v162","v163","v164","getOutput","txn2","v174","v173","v45","v172","v176","addressEq","assert","at","fs","msg","who","v177","v178","v179","v186","v187","v188","v195","le","v197","add","v199","selfAddress","acceptToken","v202","v203","eq","v204","div","showBalance","displayTokenDetails","v207","buyToken","v208","v209","v210","mul","v212","v213","txn3","sendrecv","args","lct","onlyIf","pay","sim_p","sim_r","txns","mapRefs","mapsPrev","mapsNext","v215","v216","v217","v218","v219","v220","v222","v221","v84","v214","push","amt","kind","tok","v226","v228","v232","sub","to","v233","v234","cv177","cv178","cv179","cv186","cv187","cv188","isHalt","simTokenBurn","simTokenDestroy","soloSend","tys","didTimeout","txn4","v237","v236","v107","v235","OmegaUser","v150","simTokenNew","v169","v170","v171","paidBy","_ALGO","appApproval","appClear","escrow","mapDataKeys","mapDataSize","stateKeys","stateSize","unsupported","version","_ETH","ABI","Bytecode","BytecodeLen","Which","_Connectors","ALGO","ETH","_Participants","_APIs"],"mappings":"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ACA5D,MAAAA,IAAI,GAAG6D,KAAP;AACA5D,MAAAA,IAAI,GAAG6D,KAAP;AACA5D,MAAAA,IAAI,GAAG6D,KAAP;AACA5D,MAAAA,IAAI,GAAG6D,KAAP;AAEA;AAAU;AAEX;;AACH;AACArH,EAAAA,SAAS;;AACT,MAAIwD,IAAJ,EAAU;AACR;AACC,GAFH,MAGK;AACHxD,IAAAA,SAAS;AACT;AACC;AAIF;AAAA;AACH,MAAMwI,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAG;AAChtgCc;AAugCZC,EAAAA,QAAQ,EAAG;AACb;AACA,CAzgCc;AA0gCZC,EAAAA,MAAM,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzhCc;AA0hCZC,EAAAA,WAAW,EAAE,CA1hCD;AA2hCZC,EAAAA,WAAW,EAAE,CA3hCD;AA4hCZC,EAAAA,SAAS,EAAE,CA5hCC;AA6hCZC,EAAAA,SAAS,EAAE,EA7hCC;AA8hCZC,EAAAA,WAAW,EAAE,EA9hCD;AA+hCZC,EAAAA,OAAO,EAAE;AA/hCG,CAAd;AAiiCA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlZa;AAmZXC,EAAAA,QAAQ,EAAG,g7lBAnZA;AAoZXC,EAAAA,WAAW,EAAE,IApZF;AAqZXC,EAAAA,KAAK,EAAG,IArZG;AAsZXL,EAAAA,OAAO,EAAE,CAtZE;AAuZXzJ,EAAAA,KAAK,EAAE;AAvZI,CAAb;AA0ZA,OAAO,MAAM+J,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEhB,KADmB;AAEzBiB,EAAAA,GAAG,EAAEP;AAFoB,CAApB;AAIP,OAAO,MAAMQ,aAAa,GAAG;AAC3B,gBAAc9J,UADa;AAE3B,eAAaqI;AAFc,CAAtB;AAIP,OAAO,MAAM0B,KAAK,GAAG,EAAd","sourcesContent":["// Automatically generated with Reach 0.1.6 (66f7fd96)\n/* eslint-disable */\nexport const _version = '0.1.6';\nexport const _versionHash = '0.1.6 (66f7fd96)';\nexport const _backendVersion = 5;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_UInt;\n  const ctc3 = stdlib.T_Bool;\n  \n  return {\n    infos: {\n      },\n    views: {\n      1: [ctc0, ctc1],\n      5: [ctc0, ctc1, ctc2, ctc2, ctc2, ctc2, ctc3, ctc2]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function NormalUser(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc3, ctc4]);\n  const ctc6 = stdlib.T_Bool;\n  \n  \n  const v151 = stdlib.protect(ctc0, interact.name, 'for NormalUser\\'s interact field name');\n  \n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v155], secs: v157, time: v156, didSend: v25, from: v154 } = txn1;\n  ;\n  const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v163 = undefined;\n  const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n  const txn2 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 1,\n    out_tys: [],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v174, time: v173, didSend: v45, from: v172 } = txn2;\n  ;\n  const v176 = stdlib.addressEq(v154, v172);\n  stdlib.assert(v176, {\n    at: './index.rsh:58:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'NormalUser'\n    });\n  let v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n  let v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n  let v179 = v173;\n  let v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v188 = false;\n  \n  while ((() => {\n    const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    \n    return v195;})()) {\n    const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n    const v199 = ctc.selfAddress();\n    stdlib.protect(ctc2, await interact.acceptToken(v164), {\n      at: './index.rsh:67:38:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'acceptToken',\n      who: 'NormalUser'\n      });\n    let v202;\n    const v203 = stdlib.eq(v186, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n    if (v203) {\n      v202 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n      }\n    else {\n      const v204 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 500000000000000), v186);\n      v202 = v204;\n      }\n    stdlib.protect(ctc2, await interact.showBalance(v164), {\n      at: './index.rsh:71:38:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'showBalance',\n      who: 'NormalUser'\n      });\n    stdlib.protect(ctc2, await interact.displayTokenDetails(v186, v202), {\n      at: './index.rsh:72:46:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'displayTokenDetails',\n      who: 'NormalUser'\n      });\n    const v207 = stdlib.protect(ctc5, await interact.buyToken(v186, v202), {\n      at: './index.rsh:73:56:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: 'buyToken',\n      who: 'NormalUser'\n      });\n    const v208 = v207[stdlib.checkedBigNumberify('./index.rsh:73:13:array', stdlib.UInt_max, 0)];\n    const v209 = v207[stdlib.checkedBigNumberify('./index.rsh:73:13:array', stdlib.UInt_max, 1)];\n    const v210 = stdlib.mul(v208, v202);\n    const v212 = stdlib.le(v208, v186);\n    stdlib.assert(v212, {\n      at: './index.rsh:75:13:application',\n      fs: ['at ./index.rsh:66:20:application call to [unknown function] (defined at: ./index.rsh:66:24:function exp)'],\n      msg: null,\n      who: 'NormalUser'\n      });\n    \n    const v213 = stdlib.addressEq(v209, v199);\n    \n    const txn3 = await (ctc.sendrecv({\n      args: [v154, v164, v177, v178, v186, v187, v188, v197, v208, v202, v199, v209, v151, v210],\n      evt_cnt: 6,\n      funcNum: 3,\n      lct: v179,\n      onlyIf: v213,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      pay: [v210, []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v215, v216, v217, v218, v219, v220], secs: v222, time: v221, didSend: v84, from: v214 } = txn3;\n        \n        sim_r.txns.push({\n          amt: v220,\n          kind: 'to',\n          tok: undefined\n          });\n        const v226 = stdlib.addressEq(v214, v217);\n        stdlib.assert(v226, {\n          at: './index.rsh:89:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n          });\n        const v228 = stdlib.le(v215, v186);\n        stdlib.assert(v228, {\n          at: './index.rsh:91:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n          });\n        const v232 = stdlib.sub(v186, v215);\n        sim_r.txns.push({\n          amt: v215,\n          kind: 'from',\n          to: v214,\n          tok: v164\n          });\n        const v233 = stdlib.add(v177, v215);\n        const v234 = stdlib.add(v178, v220);\n        const cv177 = v233;\n        const cv178 = v234;\n        const cv179 = v221;\n        const cv186 = v232;\n        const cv187 = v187;\n        const cv188 = v188;\n        \n        (() => {\n          const v177 = cv177;\n          const v178 = cv178;\n          const v179 = cv179;\n          const v186 = cv186;\n          const v187 = cv187;\n          const v188 = cv188;\n          \n          if ((() => {\n            const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n            \n            return v195;})()) {\n            const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.txns.push({\n              amt: v178,\n              kind: 'from',\n              to: v154,\n              tok: undefined\n              });\n            stdlib.simTokenBurn(sim_r, v164, v187);\n            if (v188) {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }\n            else {\n              stdlib.simTokenDestroy(sim_r, v164);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }}})();\n        return sim_r;\n        }),\n      soloSend: false,\n      timeoutAt: ['time', v197],\n      tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3, ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.sendrecv({\n        args: [v154, v164, v177, v178, v186, v187, v188, v197],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v179,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn4) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [], secs: v237, time: v236, didSend: v107, from: v235 } = txn4;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const cv177 = v177;\n          const cv178 = v178;\n          const cv179 = v236;\n          const cv186 = v186;\n          const cv187 = v187;\n          const cv188 = v188;\n          \n          (() => {\n            const v177 = cv177;\n            const v178 = cv178;\n            const v179 = cv179;\n            const v186 = cv186;\n            const v187 = cv187;\n            const v188 = cv188;\n            \n            if ((() => {\n              const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n              \n              return v195;})()) {\n              const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.txns.push({\n                amt: v178,\n                kind: 'from',\n                to: v154,\n                tok: undefined\n                });\n              stdlib.simTokenBurn(sim_r, v164, v187);\n              if (v188) {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              else {\n                stdlib.simTokenDestroy(sim_r, v164);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }}})();\n          return sim_r;\n          }),\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3],\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v237, time: v236, didSend: v107, from: v235 } = txn4;\n      ;\n      const cv177 = v177;\n      const cv178 = v178;\n      const cv179 = v236;\n      const cv186 = v186;\n      const cv187 = v187;\n      const cv188 = v188;\n      \n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      \n      continue;\n      }\n    else {\n      const {data: [v215, v216, v217, v218, v219, v220], secs: v222, time: v221, didSend: v84, from: v214 } = txn3;\n      ;\n      const v226 = stdlib.addressEq(v214, v217);\n      stdlib.assert(v226, {\n        at: './index.rsh:89:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n        });\n      const v228 = stdlib.le(v215, v186);\n      stdlib.assert(v228, {\n        at: './index.rsh:91:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n        });\n      const v232 = stdlib.sub(v186, v215);\n      ;\n      const v233 = stdlib.add(v177, v215);\n      const v234 = stdlib.add(v178, v220);\n      const cv177 = v233;\n      const cv178 = v234;\n      const cv179 = v221;\n      const cv186 = v232;\n      const cv187 = v187;\n      const cv188 = v188;\n      \n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      \n      continue;}\n    \n    }\n  ;\n  undefined;\n  if (v188) {\n    return;\n    }\n  else {\n    undefined;\n    return;\n    }\n  \n  \n  \n  };\nexport async function OmegaUser(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  \n  \n  const v150 = stdlib.protect(ctc0, interact.name, 'for OmegaUser\\'s interact field name');\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v150],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:45:13:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v155], secs: v157, time: v156, didSend: v25, from: v154 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n      const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v163 = stdlib.simTokenNew(sim_r, v159, v160, v161, v162, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), undefined);\n      const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n    }));\n  const {data: [v155], secs: v157, time: v156, didSend: v25, from: v154 } = txn1;\n  ;\n  const v159 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v160 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v161 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v162 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v163 = undefined;\n  const v164 = await txn1.getOutput('tokenNew', 'v163', ctc1, v163);\n  stdlib.protect(ctc2, await interact.acceptToken(v164), {\n    at: './index.rsh:54:25:application',\n    fs: ['at ./index.rsh:53:17:application call to [unknown function] (defined at: ./index.rsh:53:21:function exp)'],\n    msg: 'acceptToken',\n    who: 'OmegaUser'\n    });\n  let v169;\n  const v170 = stdlib.eq(stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n  if (v170) {\n    v169 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n    }\n  else {\n    const v171 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 500000000000000), stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    v169 = v171;\n    }\n  stdlib.protect(ctc2, await interact.displayTokenDetails(stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000), v169), {\n    at: './index.rsh:55:44:application',\n    fs: ['at ./index.rsh:53:17:application call to [unknown function] (defined at: ./index.rsh:53:21:function exp)'],\n    msg: 'displayTokenDetails',\n    who: 'OmegaUser'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v154, v164],\n    evt_cnt: 0,\n    funcNum: 1,\n    lct: v156,\n    onlyIf: true,\n    out_tys: [],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [], secs: v174, time: v173, didSend: v45, from: v172 } = txn2;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v176 = stdlib.addressEq(v154, v172);\n      stdlib.assert(v176, {\n        at: './index.rsh:58:13:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'OmegaUser'\n        });\n      const v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n      const v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n      const v179 = v173;\n      const v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n      const v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n      const v188 = false;\n      \n      if ((() => {\n        const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n        \n        return v195;})()) {\n        const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.txns.push({\n          amt: v178,\n          kind: 'from',\n          to: v154,\n          tok: undefined\n          });\n        stdlib.simTokenBurn(sim_r, v164, v187);\n        if (v188) {\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n            })\n          sim_r.isHalt = true;\n          }\n        else {\n          stdlib.simTokenDestroy(sim_r, v164);\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n            })\n          sim_r.isHalt = true;\n          }}\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc4, ctc1],\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v174, time: v173, didSend: v45, from: v172 } = txn2;\n  ;\n  const v176 = stdlib.addressEq(v154, v172);\n  stdlib.assert(v176, {\n    at: './index.rsh:58:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'OmegaUser'\n    });\n  let v177 = stdlib.checkedBigNumberify('./index.rsh:60:35:decimal', stdlib.UInt_max, 0);\n  let v178 = stdlib.checkedBigNumberify('./index.rsh:60:38:decimal', stdlib.UInt_max, 0);\n  let v179 = v173;\n  let v186 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v187 = stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000);\n  let v188 = false;\n  \n  while ((() => {\n    const v195 = stdlib.le(v177, stdlib.checkedBigNumberify('./index.rsh:48:18:decimal', stdlib.UInt_max, 100000000000));\n    \n    return v195;})()) {\n    const v197 = stdlib.add(v179, stdlib.checkedBigNumberify('./index.rsh:81:29:decimal', stdlib.UInt_max, 5000));\n    const txn3 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 3,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      timeoutAt: ['time', v197],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 4,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v237, time: v236, didSend: v107, from: v235 } = txn4;\n      ;\n      const cv177 = v177;\n      const cv178 = v178;\n      const cv179 = v236;\n      const cv186 = v186;\n      const cv187 = v187;\n      const cv188 = v188;\n      \n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      \n      continue;\n      }\n    else {\n      const {data: [v215, v216, v217, v218, v219, v220], secs: v222, time: v221, didSend: v84, from: v214 } = txn3;\n      ;\n      stdlib.protect(ctc2, await interact.paidBy(v219, v215, v216, v217), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:88:30:application call to \"liftedInteract\" (defined at: ./index.rsh:88:30:application)'],\n        msg: 'paidBy',\n        who: 'OmegaUser'\n        });\n      \n      const v226 = stdlib.addressEq(v214, v217);\n      stdlib.assert(v226, {\n        at: './index.rsh:89:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n        });\n      const v228 = stdlib.le(v215, v186);\n      stdlib.assert(v228, {\n        at: './index.rsh:91:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n        });\n      const v232 = stdlib.sub(v186, v215);\n      ;\n      const v233 = stdlib.add(v177, v215);\n      const v234 = stdlib.add(v178, v220);\n      const cv177 = v233;\n      const cv178 = v234;\n      const cv179 = v221;\n      const cv186 = v232;\n      const cv187 = v187;\n      const cv188 = v188;\n      \n      v177 = cv177;\n      v178 = cv178;\n      v179 = cv179;\n      v186 = cv186;\n      v187 = cv187;\n      v188 = cv188;\n      \n      continue;}\n    \n    }\n  ;\n  undefined;\n  if (v188) {\n    return;\n    }\n  else {\n    undefined;\n    return;\n    }\n  \n  \n  \n  };\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\ndup\nint 8\nextract_uint64\nstore 2\nextract 16 32\nstore 3\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 96\n==\nassert\ndup\nextract 0 32\nstore 255\ndup\nextract 32 64\nstore 254\npop\ntxn Sender\nglobal CreatorAddress\n==\nassert\nload 255\nstore 3\n// \"CheckPay\"\n// \"./index.rsh:45:13:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:45:13:dot\"\n// \"[]\"\nint 100000\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl2_checkTxnK:\npop\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nint 0\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 100000000000\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 6\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64(RFJBAAAAAAA=)\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64(RGFhcmFDb2luAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)\ndig 1\ngtxns ConfigAssetName\n==\nassert\nint 96\nbzero\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nload 3\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\ngaids\nstore 253\nbyte base64(AAAAAAAAAKM=)\nload 253\nitob\nconcat\nlog // 16\nload 253\nstore 252\ntxn Sender\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l3_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:58:13:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:58:13:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nint 16\nbzero\nglobal Round\nitob\nconcat\nbyte base64(AAAAF0h26AA=)\nconcat\nbyte base64(AAAAF0h26AA=)\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl3_afterHandler1:\nl4_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l5_afterHandler3\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 152\n==\nassert\ndup\nint 0\nextract_uint64\nstore 247\ndup\nint 8\nextract_uint64\nstore 246\ndup\nextract 16 32\nstore 245\ndup\nextract 48 32\nstore 244\ndup\nextract 80 64\nstore 243\ndup\nint 144\nextract_uint64\nstore 242\npop\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:78:16:dot\"\n// \"[]\"\nload 242\ndup\nbz l6_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl6_checkTxnK:\npop\n// Nothing\n// \"./index.rsh:89:12:application\"\n// \"[]\"\ntxn Sender\nload 245\n==\nassert\n// Nothing\n// \"./index.rsh:91:12:application\"\n// \"[]\"\nload 247\nload 251\n<=\nassert\nload 247\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns AssetAmount\n==\nassert\nload 254\ndig 1\ngtxns XferAsset\n==\nassert\nint axfer\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\ntxn Sender\ndig 1\ngtxns AssetReceiver\n==\nassert\nl7_checkTxnK:\npop\nload 255\nload 254\nitob\nconcat\nload 253\nload 247\n+\nitob\nload 252\nload 242\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nload 247\n-\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl5_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l8_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:82:20:dot\"\n// \"[]\"\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nload 252\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl8_afterHandler4:\nint 0\nassert\nloopBody2:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\ndup\nint 24\nextract_uint64\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\ndup\nextract 40 1\nbtoi\nstore 250\npop\ndup\nextract 0 32\nstore 249\ndup\nint 32\nextract_uint64\nstore 248\npop\nload 255\nint 100000000000\n<=\nbz l9_ifF\nload 253\nint 5000\n+\nstore 247\nload 249\nload 248\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nload 247\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 81\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_ifF:\nload 254\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 249\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nload 250\nbz l11_ifF\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl12_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl11_ifF:\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 248\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl13_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nload 3\nconcat\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nglobal ZeroAddress\nstore 3\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  escrow: `#pragma version 5\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 81,\n  unsupported: [],\n  version: 5\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v155\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v155\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v215\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v216\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v217\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v218\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v219\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v220\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v163\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"oe_v163\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v215\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v216\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v217\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v218\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v219\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v220\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x6080604052604051620025d6380380620025d68339810160408190526200002691620003d8565b6000808055436003556040805160e08101825260c081018381528152815160208082018452848252808301919091528251606080820185528582528183018690528185018690528385019190915283518083018552858152818401526080830185905260a083019490945282518551815285820151518051828401529091015181840152915190927f819125e79b475e13c17f8bbe764be761fb45f83700d23d01d0548e85c578b478928290030190a1620000e434156007620002c3565b8051682230b0b930a1b7b4b760b91b90526020808201516244524160e81b90526040808301805160009081905281518401819052905182018190526060840151528251518151928301520160408051601f1981840301815290829052602083810151516001600160c01b031916908301529060280160408051808303601f1901815282825284820151805160208083015192850151908601919091529284015260608301919091529060800160408051601f198184030181528282526060860151516020840152910160405160208183030381529060405264174876e8006012604051620001d290620002ed565b620001e396959493929190620004bb565b604051809103906000f08015801562000200573d6000803e3d6000fd5b506001600160a01b03166080820181905260a082018190526040519081527f57b259bff0a962eb516f03a0da6db7c0210c47ba345e2aec2ca99d85ed8350319060200160405180910390a1604080518082018252600060208083018281523380855260a08701516001600160a01b0390811683526001948590554390945585519283015251909116928101929092529060600160405160208183030381529060405260029080519060200190620002b9929190620002fb565b5050505062000563565b81620002e95760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b610f75806200166183390190565b828054620003099062000526565b90600052602060002090601f0160209004810192826200032d576000855562000378565b82601f106200034857805160ff191683800117855562000378565b8280016001018555821562000378579182015b82811115620003785782518255916020019190600101906200035b565b50620003869291506200038a565b5090565b5b808211156200038657600081556001016200038b565b604080519081016001600160401b0381118282101715620003d257634e487b7160e01b600052604160045260246000fd5b60405290565b60008183036060811215620003ec57600080fd5b620003f6620003a1565b835181526040601f19830112156200040d57600080fd5b6040519150602082016001600160401b03811183821017156200044057634e487b7160e01b600052604160045260246000fd5b6040526200044d620003a1565b60208581015182526040909501518186015282529283015250919050565b6000815180845260005b81811015620004935760208185018101518683018201520162000475565b81811115620004a6576000602083870101525b50601f01601f19169290920160200192915050565b60c081526000620004d060c08301896200046b565b8281036020840152620004e481896200046b565b90508281036040840152620004fa81886200046b565b905082810360608401526200051081876200046b565b6080840195909552505060a00152949350505050565b600181811c908216806200053b57607f821691505b602082108114156200055d57634e487b7160e01b600052602260045260246000fd5b50919050565b6110ee80620005736000396000f3fe6080604052600436106100565760003560e01c80630d19a5fb1461005f5780631e93b0f1146100725780637963168e1461009657806383230757146100a95780639afc5bcc146100be578063ab53f2c6146100d157005b3661005d57005b005b61005d61006d366004610d57565b6100f4565b34801561007e57600080fd5b506003545b6040519081526020015b60405180910390f35b61005d6100a4366004610d57565b6102a2565b3480156100b557600080fd5b50600154610083565b61005d6100cc366004610d6f565b610436565b3480156100dd57600080fd5b506100e6610666565b60405161008d929190610dae565b6101046005600054146013610703565b61011e8135158061011757506001548235145b6014610703565b60008080556002805461013090610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610de8565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610e5b565b90506101d58160e001514310156015610703565b7f64c05390f66d4c96d69b55a2d6f7bb5135997731e2b63f4a719a786bc0579627826040516102049190610f13565b60405180910390a161021834156012610703565b610220610c26565b815181516001600160a01b039182169052602080840151835192169181019190915260408084015182840180519190915260608086015182519094019390935280514392019190915260808085015182519093019290925260a08085015182519093019290925260c0840151905190151591015261029d8161072d565b505050565b6102b2600160005414600a610703565b6102cc813515806102c557506001548235145b600b610703565b6000808055600280546102de90610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90610de8565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b505050505080602001905181019061036f9190610f38565b90507f9f41c6cf17ede288cbb2cfbbafdd05b2b2025dea3b047cdb79dbc892d7a9286d826040516103a09190610f13565b60405180910390a16103b434156008610703565b80516103cc906001600160a01b031633146009610703565b6103d4610c26565b815181516001600160a01b039182169052602080840151835192169181019190915280820180516000908190528151909201829052805143604090910152805164174876e80060609091018190528151608001525160a0015261029d8161072d565b610446600560005414600f610703565b6104608135158061045957506001548235145b6010610703565b60008080556002805461047290610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461049e90610de8565b80156104eb5780601f106104c0576101008083540402835291602001916104eb565b820191906000526020600020905b8154815290600101906020018083116104ce57829003601f168201915b50505050508060200190518101906105039190610e5b565b90506105168160e0015143106011610703565b7fe3dd4d1e92f956195cdb05d6bf62cc37b6a849b951ebec81f91722b37d7ef9a8826040516105459190610fa5565b60405180910390a161055e3460e084013514600c610703565b61058c610571608084016060850161101d565b6001600160a01b0316336001600160a01b031614600d610703565b60808101516105a39060208401351115600e610703565b6105b98160200151338460200160000135610957565b6105c1610c26565b815181516001600160a01b039182169052602080840151835192169181019190915260408301516105f59185013590611050565b602082015152606082015161060f9060e085013590611050565b6020808301805182019290925290514360409091015260808301516106379185013590611068565b6020820180516060019190915260a08084015182516080015260c0840151915191151591015261029d8161072d565b60006060600054600280805461067b90610de8565b80601f01602080910402602001604051908101604052809291908181526020018280546106a790610de8565b80156106f45780601f106106c9576101008083540402835291602001916106f4565b820191906000526020600020905b8154815290600101906020018083116106d757829003601f168201915b50505050509050915091509091565b816107295760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b5050565b60408051602081019091526000815260208201515164174876e800106108b2576113888260200151604001516107639190611050565b81526040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091528251516001600160a01b0390811682528351602090810151909116818301528084018051516040808501919091528151830151606080860191909152825101516080808601919091528251015160a080860191909152915190910151151560c0840152835160e0840152600560005543600155516108889183910160006101008201905060018060a01b038084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151151560c083015260e083015160e083015292915050565b604051602081830303815290604052600290805190602001906108ac929190610c88565b50505050565b81515160208084015101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156108f3573d6000803e3d6000fd5b5061090e82600001516020015183602001516080015161096b565b816020015160a0015115610932576000808055600181905561072990600290610d0c565b8151602001516109419061097e565b6000808055600181905561072990600290610d0c565b610962838383610993565b61029d57600080fd5b6109758282610a64565b61072957600080fd5b61098781610b3f565b61099057600080fd5b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839283929188169183916109f29161107f565b60006040518083038185875af1925050503d8060008114610a2f576040519150601f19603f3d011682016040523d82523d6000602084013e610a34565b606091505b5091509150610a4582826002610be4565b5080806020019051810190610a5a919061109b565b9695505050505050565b6000806000846001600160a01b031660006342966c6860e01b86604051602401610a9091815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ace919061107f565b60006040518083038185875af1925050503d8060008114610b0b576040519150601f19603f3d011682016040523d82523d6000602084013e610b10565b606091505b5091509150610b2182826003610be4565b5080806020019051810190610b36919061109b565b95945050505050565b60408051600481526024810182526020810180516001600160e01b031663083197ef60e41b1790529051600091829182916001600160a01b038616918391610b869161107f565b60006040518083038185875af1925050503d8060008114610bc3576040519150601f19603f3d011682016040523d82523d6000602084013e610bc8565b606091505b5091509150610bd982826004610be4565b506001949350505050565b60608315610bf3575081610c1f565b825115610c035782518084602001fd5b60405163100960cb60e01b815260048101839052602401610720565b9392505050565b60408051608081018252600091810182815260608201929092529081908152602001610c836040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054610c9490610de8565b90600052602060002090601f016020900481019282610cb65760008555610cfc565b82601f10610ccf57805160ff1916838001178555610cfc565b82800160010185558215610cfc579182015b82811115610cfc578251825591602001919060010190610ce1565b50610d08929150610d42565b5090565b508054610d1890610de8565b6000825580601f10610d28575050565b601f01602090049060005260206000209081019061099091905b5b80821115610d085760008155600101610d43565b600060408284031215610d6957600080fd5b50919050565b60006101008284031215610d6957600080fd5b60005b83811015610d9d578181015183820152602001610d85565b838111156108ac5750506000910152565b8281526040602082015260008251806040840152610dd3816060850160208701610d82565b601f01601f1916919091016060019392505050565b600181811c90821680610dfc57607f821691505b60208210811415610d6957634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461099057600080fd5b8051610e3d81610e1d565b919050565b801515811461099057600080fd5b8051610e3d81610e42565b6000610100808385031215610e6f57600080fd5b6040519081019067ffffffffffffffff82118183101715610ea057634e487b7160e01b600052604160045260246000fd5b8160405283519150610eb182610e1d565b818152610ec060208501610e32565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152610ef960c08501610e50565b60c082015260e084015160e0820152809250505092915050565b81358152604081016020830135610f2981610e42565b80151560208401525092915050565b600060408284031215610f4a57600080fd5b6040516040810181811067ffffffffffffffff82111715610f7b57634e487b7160e01b600052604160045260246000fd5b6040528251610f8981610e1d565b81526020830151610f9981610e1d565b60208201529392505050565b81358152602080830135908201526040808301359082015261010081016060830135610fd081610e1d565b6001600160a01b039081166060840152608084013590610fef82610e1d565b8082166080850152505060a083013560a083015260c083013560c083015260e083013560e083015292915050565b60006020828403121561102f57600080fd5b8135610c1f81610e1d565b634e487b7160e01b600052601160045260246000fd5b600082198211156110635761106361103a565b500190565b60008282101561107a5761107a61103a565b500390565b60008251611091818460208701610d82565b9190910192915050565b6000602082840312156110ad57600080fd5b8151610c1f81610e4256fea26469706673582212205bee7a2fc824d99e14881e6e11b1141da39914739a9612fee97b32cbabf0d61c64736f6c6343000809003360806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea26469706673582212202084fb605e105444e5af502915c055fef60462317d4122acfb076376ea68678d64736f6c63430008090033`,\n  BytecodeLen: 9686,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"NormalUser\": NormalUser,\n  \"OmegaUser\": OmegaUser\n  };\nexport const _APIs = {\n  };\n"]},"metadata":{},"sourceType":"module"}