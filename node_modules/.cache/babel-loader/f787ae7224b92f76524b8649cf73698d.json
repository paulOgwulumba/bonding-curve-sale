{"ast":null,"code":"var _jsxFileName = \"/home/paradoxfly/reach/bonding-curve-sale/src/components/CreateOrImportAccount/CreateOrImportAccount.js\";\nimport React from 'react';\nimport styles from './CreateOrImportAccount.module.css';\nimport { useState, useEffect } from 'react';\nimport Loader from '../Loader/Loader';\n\nconst CreateOrImportAccount = props => {\n  const Status = {\n    INTRO: 'intro',\n    IMPORT_ACCOUNT: 'import account',\n    CREATE_ACCOUNT: 'create account',\n    LOADING: 'loading'\n  };\n  let [status, setStatus] = useState(Status.INTRO);\n  let [mnemonic, setMnemonic] = useState('');\n  let [mnemonicIsValid, setMnemonicIsValid] = useState(true);\n  let [isImportSuccessful, setIsImportSuccessful] = useState(false);\n  let [account, setAccount] = useState({});\n  let [addr, setAddr] = useState('');\n\n  const handleImportAccount = async (mnemonic, event) => {\n    event.preventDefault();\n\n    try {\n      const acc = await props.parent.state.reach.newAccountFromMnemonic(mnemonic); // check balance of account before funding\n\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n      console.log(\"Checking the balance of our imported account\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check if account can be funded from faucet\n\n      console.log(\"Checking if account can be funded from faucet.\");\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet();\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\"); // get faucet information\n\n        console.log(\"Getting faucet information\");\n        const faucet = await props.parent.state.reach.getFaucet();\n        console.log(\"Faucet information gotten successfuly\");\n        console.log(\"getting the balance of our faucet before funding\");\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)); // funding our account\n\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5));\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5));\n        console.log(\"Done funding our imported account\"); // check balance of account before funding\n\n        console.log(\"Checking the balance of our imported account after funding\");\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check balance of faucet after funding\n\n        console.log(\"getting the balance of our faucet after funding\");\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6));\n      } else {\n        console.log(\"Cannot fund from faucet\");\n      }\n\n      setMnemonicIsValid(true);\n      setIsImportSuccessful(true);\n      setTimeout(() => {\n        props.parent.addAccount(acc, true);\n      }, 1000);\n    } catch (err) {\n      setMnemonicIsValid(false);\n    }\n  };\n\n  const createNewAccount = async () => {\n    setStatus(Status.LOADING);\n\n    try {\n      // Create New Account\n      const acc = await props.parent.state.reach.createAccount(); // check balance of given Account\n\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n      console.log(\"Checking the balance of our new account\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check if account can be funded from faucet\n\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet();\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\"); // get faucet information\n\n        console.log(\"Getting faucet information\");\n        const faucet = await props.parent.state.reach.getFaucet();\n        console.log(\"Faucet information gotten successfuly\");\n        console.log(\"getting the balance of our faucet before funding\");\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)); // funding our account\n\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5));\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5));\n        console.log(\"Done funding our imported account\"); // check balance of account before funding\n\n        console.log(\"Checking the balance of our imported account after funding\");\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check balance of faucet after funding\n\n        console.log(\"getting the balance of our faucet after funding\");\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6));\n      } else {\n        console.log(\"Cannot fund from faucet\");\n      } // Set this account as the global account\n\n\n      setAccount(acc);\n      setAddr(acc.getAddress()); // update global state\n\n      setTimeout(() => {\n        setStatus(Status.CREATE_ACCOUNT);\n      }, 2000);\n    } catch (error) {\n      console.log(error);\n      alert('Something went wrong. Please try again later');\n      setStatus(Status.INTRO);\n    }\n  };\n\n  useEffect(() => {\n    if (props.parent.state.account && !props.parent.state.connectedWithMnemonic) {\n      setStatus(Status.CREATE_ACCOUNT);\n      setAccount(props.parent.state.account);\n      setAddr(props.parent.state.account.getAddress());\n      console.log('We here');\n    }\n  }, [props.parent.state.connectedWithMnemonic, props.parent.state.account, Status.CREATE_ACCOUNT]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.container} ${status === Status.LOADING ? styles.hide : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"subscribe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: status === Status.INTRO ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"Daara Token\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"No default account detected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"No account was found connected to your browser. Pick one of the options below to either import an existing account or create a new one.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 35\n    }\n  }, \"For better experience, import an existing account.*\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => setStatus(Status.IMPORT_ACCOUNT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 35\n    }\n  }, \"Import Account\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default\",\n    onClick: createNewAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }\n  }, \"Create Account\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${status === Status.IMPORT_ACCOUNT ? '' : styles.hide}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron d-flex align-items-center\",\n    style: {\n      minWidth: \"1000px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Daara Token\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, \"Import Existing Acount\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-left text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"Enter the correct 25-word mnemonic key phrase of your account to proceed.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: `text-center ${isImportSuccessful ? '' : styles.hide}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: `text-success`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 35\n    }\n  }, \"Account imported successfully!\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: `col-12`,\n    style: {\n      marginTop: \"0px\"\n    },\n    onSubmit: event => handleImportAccount(mnemonic, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.form}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: `${styles.textarea}`,\n    placeholder: \"Enter account mnemonic key phrases.\",\n    required: true,\n    value: mnemonic,\n    onChange: event => {\n      setMnemonic(event.target.value);\n      setMnemonicIsValid(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => setStatus(Status.IMPORT_ACCOUNT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, \"Import\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: `text-center ${mnemonicIsValid ? styles.hide : ''}`,\n    style: {\n      marginTop: \"0px\",\n      marginBottom: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: `text-danger`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, \"This mnemonic key does not exist. Check again and re-enter.\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: status === Status.CREATE_ACCOUNT ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading pointer\",\n    style: {\n      padding: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"New Account Created Successfully!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 28\n    }\n  }, \"Public Address:\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 51\n    }\n  }), \" \", addr))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn btn-primary ${styles.spacing}`,\n    onClick: () => props.parent.addAccount(account),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, \"Continue\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: status === Status.LOADING ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    isLoading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CreateOrImportAccount;","map":{"version":3,"sources":["/home/paradoxfly/reach/bonding-curve-sale/src/components/CreateOrImportAccount/CreateOrImportAccount.js"],"names":["React","styles","useState","useEffect","Loader","CreateOrImportAccount","props","Status","INTRO","IMPORT_ACCOUNT","CREATE_ACCOUNT","LOADING","status","setStatus","mnemonic","setMnemonic","mnemonicIsValid","setMnemonicIsValid","isImportSuccessful","setIsImportSuccessful","account","setAccount","addr","setAddr","handleImportAccount","event","preventDefault","acc","parent","state","reach","newAccountFromMnemonic","balanceOfAcc","balanceOf","console","log","formatCurrency","canFundFromFaucet","faucet","getFaucet","balanceOfFaucet","ballerina","fundFromFaucet","parseCurrency","setTimeout","addAccount","err","createNewAccount","createAccount","getAddress","error","alert","connectedWithMnemonic","container","hide","width","minWidth","marginTop","form","textarea","target","value","marginBottom","padding","spacing"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from './CreateOrImportAccount.module.css'\nimport { useState, useEffect } from 'react'\nimport Loader from '../Loader/Loader'\n\nconst CreateOrImportAccount = (props) => {\n  const Status = {\n    INTRO: 'intro',\n    IMPORT_ACCOUNT: 'import account',\n    CREATE_ACCOUNT: 'create account',\n    LOADING: 'loading'\n  }\n  let [status, setStatus] = useState(Status.INTRO)\n  let [mnemonic, setMnemonic] = useState('')\n  let [mnemonicIsValid, setMnemonicIsValid] = useState(true)\n  let [isImportSuccessful, setIsImportSuccessful] = useState(false)\n  let [account, setAccount] = useState({})\n  let [addr, setAddr] =  useState('')\n\n  const handleImportAccount = async (mnemonic, event) => {\n    event.preventDefault()\n    try {\n      const acc = await props.parent.state.reach.newAccountFromMnemonic(mnemonic)\n\n      // check balance of account before funding\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n      console.log(\"Checking the balance of our imported account\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n      // check if account can be funded from faucet\n      console.log(\"Checking if account can be funded from faucet.\")\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet()\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\")\n\n        // get faucet information\n        console.log(\"Getting faucet information\")\n        const faucet = await props.parent.state.reach.getFaucet()\n        console.log(\"Faucet information gotten successfuly\")\n\n        console.log(\"getting the balance of our faucet before funding\")\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n        // funding our account\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5))\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5))\n        console.log(\"Done funding our imported account\")\n\n        // check balance of account before funding\n        console.log(\"Checking the balance of our imported account after funding\")\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n        // check balance of faucet after funding\n        console.log(\"getting the balance of our faucet after funding\")\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n      } else {\n        console.log(\"Cannot fund from faucet\")\n      }\n\n      setMnemonicIsValid(true)\n      setIsImportSuccessful(true)\n      setTimeout(() => {\n        props.parent.addAccount(acc, true)\n      }, 1000)\n    }\n    catch (err) {\n      setMnemonicIsValid(false)\n    }\n  }\n\n  const createNewAccount = async () => {\n    setStatus(Status.LOADING);\n    try {\n      // Create New Account\n      const acc = await props.parent.state.reach.createAccount();\n\n      // check balance of given Account\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n      console.log(\"Checking the balance of our new account\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n      // check if account can be funded from faucet\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet()\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\")\n\n        // get faucet information\n        console.log(\"Getting faucet information\")\n        const faucet = await props.parent.state.reach.getFaucet()\n        console.log(\"Faucet information gotten successfuly\")\n\n        console.log(\"getting the balance of our faucet before funding\")\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n        // funding our account\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5))\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5))\n        console.log(\"Done funding our imported account\")\n\n        // check balance of account before funding\n        console.log(\"Checking the balance of our imported account after funding\")\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n        // check balance of faucet after funding\n        console.log(\"getting the balance of our faucet after funding\")\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n      } else {\n        console.log(\"Cannot fund from faucet\")\n      }\n\n      // Set this account as the global account\n      setAccount(acc)\n\n      setAddr(acc.getAddress())\n\n      // update global state\n      setTimeout(() => {\n        setStatus(Status.CREATE_ACCOUNT);\n      }, 2000)\n    } catch (error) {\n      console.log(error)\n      alert('Something went wrong. Please try again later');\n      setStatus(Status.INTRO)\n    }\n  }\n\n  useEffect(() => {\n    if(props.parent.state.account && !props.parent.state.connectedWithMnemonic) {\n      setStatus(Status.CREATE_ACCOUNT)\n      setAccount(props.parent.state.account)\n      setAddr(props.parent.state.account.getAddress())\n      console.log('We here')\n    }\n  }, [props.parent.state.connectedWithMnemonic, props.parent.state.account, Status.CREATE_ACCOUNT])\n\n  return (\n    <>\n      <div className={`${styles.container} ${status === Status.LOADING ? styles.hide : ''}`}>\n        <section className=\"subscribe\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <div className={status === Status.INTRO ? '' : styles.hide}>                   \n                    <section className=\"section-1\">\n                        <div className=\"jumbotron d-flex align-items-center\">\n                            <div className=\"gradient\"></div>\n                            <div className=\"container content\">\n                                <h1>Daara Token</h1>\n                                <h2 className=\"text-center\">No default account detected!</h2>\n                                <p>\n                                  No account was found connected to your browser. Pick one of the options below to either import an existing account or create a new one.\n                                  <br/>\n                                  <small className=\"text-warning\">For better experience, import an existing account.*</small>\n                                </p>\n                                <p className=\"text-center\" style={{width: \"100%\"}}>\n                                  <button className=\"btn btn-success\" onClick={() => setStatus(Status.IMPORT_ACCOUNT)}>\n                                    Import Account\n                                  </button>\n                                  <button className=\"btn btn-default\" onClick={createNewAccount}>\n                                    Create Account\n                                  </button>\n                                </p>\n                            </div>                                                   \n                        </div>\n                    </section>\n                  </div>\n\n                  <div className={`${status === Status.IMPORT_ACCOUNT ? '' : styles.hide}`}>\n                    <section className=\"section-1\">\n                        <div className=\"jumbotron d-flex align-items-center\" style={{minWidth: \"1000px\"}}>\n                            <div className=\"gradient\"></div>\n                            <div className=\"container content\" >\n                                <h1>Daara Token</h1>\n                                <h2 className=\"text-center\">Import Existing Acount</h2>\n                                <p className=\"text-left text-warning\">\n                                    Enter the correct 25-word mnemonic key phrase of your account to proceed.\n                                </p>\n                                \n                                <p className={`text-center ${isImportSuccessful ? '' : styles.hide}`}>\n                                  <small className={`text-success`}>Account imported successfully!</small>\n                                </p>\n                                <form className={`col-12`} style={{marginTop: \"0px\"}} onSubmit={(event) => handleImportAccount(mnemonic, event)}>\n                                  <div className={`${styles.form}`}>\n                                    <textarea\n                                      className={`${styles.textarea}`}\n                                      placeholder=\"Enter account mnemonic key phrases.\"\n                                      required\n                                      value={mnemonic}\n                                      onChange={(event) => {\n                                        setMnemonic(event.target.value);\n                                        setMnemonicIsValid(true)\n                                      }}\n                                    >\n                                    </textarea>\n                                  </div>\n                                  <p className=\"text-center\" style={{width: \"100%\"}}>\n                                    <button className=\"btn btn-success\" onClick={() => setStatus(Status.IMPORT_ACCOUNT)}>\n                                      Import\n                                    </button>\n                                  </p>\n                                  \n                                  <p className={`text-center ${mnemonicIsValid ? styles.hide : ''}`} style={{marginTop: \"0px\", marginBottom: \"0px\"}}>\n                                    <small className={`text-danger`}>This mnemonic key does not exist. Check again and re-enter.</small>\n                                  </p>\n                                </form>\n                            </div>                                                   \n                        </div>\n                    </section>\n                  </div>\n\n                  <div className={status === Status.CREATE_ACCOUNT ? '' : styles.hide}>\n                    <div className=\"col-md-12\">\n                      <div className=\"heading pointer\" style={{ padding: '2rem' }}>\n                        <h2>New Account Created Successfully!</h2>\n                        <br />\n                        <p><b>Public Address:</b> <br /> {addr}</p>\n                      </div>\n                    </div>\n                    <div className=\"col-12\">\n                      <button className={`btn btn-primary ${styles.spacing}`} onClick={() => props.parent.addAccount(account)}>\n                        Continue\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n      <div className={status === Status.LOADING ? '' : styles.hide}>\n        <Loader isLoading={true} />\n      </div>\n    </>\n  )\n}\n\n\n\nexport default CreateOrImportAccount"]},"metadata":{},"sourceType":"module"}