{"ast":null,"code":"// Automatically generated with Reach 0.1.6 (66f7fd96)\n\n/* eslint-disable */\nexport const _version = '0.1.6';\nexport const _versionHash = '0.1.6 (66f7fd96)';\nexport const _backendVersion = 5;\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_UInt;\n  const ctc3 = stdlib.T_Bool;\n  return {\n    infos: {},\n    views: {\n      1: [ctc0, ctc1],\n      5: [ctc0, ctc1, ctc2, ctc2, ctc2, ctc2, ctc3, ctc2]\n    }\n  };\n}\n;\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n  };\n}\n;\nexport async function NormalUser(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc3, ctc4]);\n  const ctc6 = stdlib.T_Bool;\n  const v164 = stdlib.protect(ctc0, interact.name, 'for NormalUser\\'s interact field name');\n  const txn1 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v168],\n    secs: v170,\n    time: v169,\n    didSend: v25,\n    from: v167\n  } = txn1;\n  ;\n  const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v176 = undefined;\n  const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n  stdlib.protect(ctc2, await interact.acceptToken(v177), {\n    at: './index.rsh:1:39:application',\n    fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:53:34:application call to \"liftedInteract\" (defined at: ./index.rsh:53:34:application)'],\n    msg: 'acceptToken',\n    who: 'NormalUser'\n  });\n  const txn2 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 1,\n    out_tys: [],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [],\n    secs: v188,\n    time: v187,\n    didSend: v49,\n    from: v186\n  } = txn2;\n  ;\n  const v190 = stdlib.addressEq(v167, v186);\n  stdlib.assert(v190, {\n    at: './index.rsh:54:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'NormalUser'\n  });\n  let v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n  let v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n  let v193 = v187;\n  let v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v202 = false;\n\n  while ((() => {\n    const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    return v209;\n  })()) {\n    const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n    const v213 = ctc.selfAddress();\n    let v216;\n    const v217 = stdlib.eq(v200, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n\n    if (v217) {\n      v216 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n    } else {\n      const v218 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), v200);\n      v216 = v218;\n    }\n\n    stdlib.protect(ctc2, await interact.showBalance(v177), {\n      at: './index.rsh:66:38:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'showBalance',\n      who: 'NormalUser'\n    });\n    stdlib.protect(ctc2, await interact.displayTokenDetails(v200, v216), {\n      at: './index.rsh:67:46:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'displayTokenDetails',\n      who: 'NormalUser'\n    });\n    const v221 = stdlib.protect(ctc5, await interact.buyToken(v200, v216), {\n      at: './index.rsh:68:56:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'buyToken',\n      who: 'NormalUser'\n    });\n    const v222 = v221[stdlib.checkedBigNumberify('./index.rsh:68:13:array', stdlib.UInt_max, 0)];\n    const v223 = v221[stdlib.checkedBigNumberify('./index.rsh:68:13:array', stdlib.UInt_max, 1)];\n    const v224 = stdlib.mul(v222, v216);\n    const v226 = stdlib.le(v222, v200);\n    stdlib.assert(v226, {\n      at: './index.rsh:70:13:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: null,\n      who: 'NormalUser'\n    });\n    const v227 = stdlib.addressEq(v223, v213);\n    const txn3 = await ctc.sendrecv({\n      args: [v167, v177, v191, v192, v200, v201, v202, v211, v222, v216, v213, v223, v164, v224],\n      evt_cnt: 6,\n      funcNum: 3,\n      lct: v193,\n      onlyIf: v227,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      pay: [v224, []],\n      sim_p: async txn3 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [v229, v230, v231, v232, v233, v234],\n          secs: v236,\n          time: v235,\n          didSend: v88,\n          from: v228\n        } = txn3;\n        sim_r.txns.push({\n          amt: v234,\n          kind: 'to',\n          tok: undefined\n        });\n        const v240 = stdlib.addressEq(v228, v231);\n        stdlib.assert(v240, {\n          at: './index.rsh:81:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n        });\n        const v242 = stdlib.le(v229, v200);\n        stdlib.assert(v242, {\n          at: './index.rsh:83:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n        });\n        const v246 = stdlib.sub(v200, v229);\n        sim_r.txns.push({\n          amt: v229,\n          kind: 'from',\n          to: v228,\n          tok: v177\n        });\n        const v253 = stdlib.add(v191, v229);\n        const v254 = stdlib.add(v192, v234);\n        const cv191 = v253;\n        const cv192 = v254;\n        const cv193 = v235;\n        const cv200 = v246;\n        const cv201 = v201;\n        const cv202 = v202;\n\n        (() => {\n          const v191 = cv191;\n          const v192 = cv192;\n          const v193 = cv193;\n          const v200 = cv200;\n          const v201 = cv201;\n          const v202 = cv202;\n\n          if ((() => {\n            const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n            return v209;\n          })()) {\n            const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n            sim_r.isHalt = false;\n          } else {\n            sim_r.txns.push({\n              amt: v192,\n              kind: 'from',\n              to: v167,\n              tok: undefined\n            });\n            stdlib.simTokenBurn(sim_r, v177, v201);\n\n            if (v202) {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.isHalt = true;\n            } else {\n              stdlib.simTokenDestroy(sim_r, v177);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.isHalt = true;\n            }\n          }\n        })();\n\n        return sim_r;\n      },\n      soloSend: false,\n      timeoutAt: ['time', v211],\n      tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3, ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      waitIfNotPresent: false\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.sendrecv({\n        args: [v167, v177, v191, v192, v200, v201, v202, v211],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v193,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: async txn4 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          const {\n            data: [],\n            secs: v257,\n            time: v256,\n            didSend: v120,\n            from: v255\n          } = txn4;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const cv191 = v191;\n          const cv192 = v192;\n          const cv193 = v256;\n          const cv200 = v200;\n          const cv201 = v201;\n          const cv202 = v202;\n\n          (() => {\n            const v191 = cv191;\n            const v192 = cv192;\n            const v193 = cv193;\n            const v200 = cv200;\n            const v201 = cv201;\n            const v202 = cv202;\n\n            if ((() => {\n              const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n              return v209;\n            })()) {\n              const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n              sim_r.isHalt = false;\n            } else {\n              sim_r.txns.push({\n                amt: v192,\n                kind: 'from',\n                to: v167,\n                tok: undefined\n              });\n              stdlib.simTokenBurn(sim_r, v177, v201);\n\n              if (v202) {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              } else {\n                stdlib.simTokenDestroy(sim_r, v177);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n            }\n          })();\n\n          return sim_r;\n        },\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3],\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v257,\n        time: v256,\n        didSend: v120,\n        from: v255\n      } = txn4;\n      ;\n      const cv191 = v191;\n      const cv192 = v192;\n      const cv193 = v256;\n      const cv200 = v200;\n      const cv201 = v201;\n      const cv202 = v202;\n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      continue;\n    } else {\n      const {\n        data: [v229, v230, v231, v232, v233, v234],\n        secs: v236,\n        time: v235,\n        didSend: v88,\n        from: v228\n      } = txn3;\n      ;\n      const v240 = stdlib.addressEq(v228, v231);\n      stdlib.assert(v240, {\n        at: './index.rsh:81:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n      });\n      const v242 = stdlib.le(v229, v200);\n      stdlib.assert(v242, {\n        at: './index.rsh:83:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n      });\n      const v246 = stdlib.sub(v200, v229);\n      ;\n      const v253 = stdlib.add(v191, v229);\n      const v254 = stdlib.add(v192, v234);\n      const cv191 = v253;\n      const cv192 = v254;\n      const cv193 = v235;\n      const cv200 = v246;\n      const cv201 = v201;\n      const cv202 = v202;\n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      continue;\n    }\n  }\n\n  ;\n  undefined;\n\n  if (v202) {\n    return;\n  } else {\n    undefined;\n    return;\n  }\n}\n;\nexport async function OmegaUser(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const v163 = stdlib.protect(ctc0, interact.name, 'for OmegaUser\\'s interact field name');\n  const txn1 = await ctc.sendrecv({\n    args: [v163],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:41:13:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn1 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [v168],\n        secs: v170,\n        time: v169,\n        didSend: v25,\n        from: v167\n      } = txn1;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n      const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v176 = stdlib.simTokenNew(sim_r, v172, v173, v174, v175, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), undefined);\n      const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n      sim_r.isHalt = false;\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v168],\n    secs: v170,\n    time: v169,\n    didSend: v25,\n    from: v167\n  } = txn1;\n  ;\n  const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v176 = undefined;\n  const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n  stdlib.protect(ctc2, await interact.acceptToken(v177), {\n    at: './index.rsh:50:25:application',\n    fs: ['at ./index.rsh:49:17:application call to [unknown function] (defined at: ./index.rsh:49:21:function exp)'],\n    msg: 'acceptToken',\n    who: 'OmegaUser'\n  });\n  let v182;\n  const v183 = stdlib.eq(stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n\n  if (v183) {\n    v182 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n  } else {\n    const v184 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    v182 = v184;\n  }\n\n  stdlib.protect(ctc2, await interact.displayTokenDetails(stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), v182), {\n    at: './index.rsh:51:44:application',\n    fs: ['at ./index.rsh:49:17:application call to [unknown function] (defined at: ./index.rsh:49:21:function exp)'],\n    msg: 'displayTokenDetails',\n    who: 'OmegaUser'\n  });\n  const txn2 = await ctc.sendrecv({\n    args: [v167, v177],\n    evt_cnt: 0,\n    funcNum: 1,\n    lct: v169,\n    onlyIf: true,\n    out_tys: [],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn2 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [],\n        secs: v188,\n        time: v187,\n        didSend: v49,\n        from: v186\n      } = txn2;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v190 = stdlib.addressEq(v167, v186);\n      stdlib.assert(v190, {\n        at: './index.rsh:54:13:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'OmegaUser'\n      });\n      const v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n      const v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n      const v193 = v187;\n      const v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n      const v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n      const v202 = false;\n\n      if ((() => {\n        const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n        return v209;\n      })()) {\n        const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n        sim_r.isHalt = false;\n      } else {\n        sim_r.txns.push({\n          amt: v192,\n          kind: 'from',\n          to: v167,\n          tok: undefined\n        });\n        stdlib.simTokenBurn(sim_r, v177, v201);\n\n        if (v202) {\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n          });\n          sim_r.isHalt = true;\n        } else {\n          stdlib.simTokenDestroy(sim_r, v177);\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n          });\n          sim_r.isHalt = true;\n        }\n      }\n\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc4, ctc1],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [],\n    secs: v188,\n    time: v187,\n    didSend: v49,\n    from: v186\n  } = txn2;\n  ;\n  const v190 = stdlib.addressEq(v167, v186);\n  stdlib.assert(v190, {\n    at: './index.rsh:54:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'OmegaUser'\n  });\n  let v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n  let v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n  let v193 = v187;\n  let v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v202 = false;\n\n  while ((() => {\n    const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    return v209;\n  })()) {\n    const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n    const txn3 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 3,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      timeoutAt: ['time', v211],\n      waitIfNotPresent: false\n    });\n\n    if (txn3.didTimeout) {\n      const txn4 = await ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 4,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v257,\n        time: v256,\n        didSend: v120,\n        from: v255\n      } = txn4;\n      ;\n      const cv191 = v191;\n      const cv192 = v192;\n      const cv193 = v256;\n      const cv200 = v200;\n      const cv201 = v201;\n      const cv202 = v202;\n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      continue;\n    } else {\n      const {\n        data: [v229, v230, v231, v232, v233, v234],\n        secs: v236,\n        time: v235,\n        didSend: v88,\n        from: v228\n      } = txn3;\n      ;\n      stdlib.protect(ctc2, await interact.paidBy(v233, v229, v230, v231), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:80:30:application call to \"liftedInteract\" (defined at: ./index.rsh:80:30:application)'],\n        msg: 'paidBy',\n        who: 'OmegaUser'\n      });\n      const v240 = stdlib.addressEq(v228, v231);\n      stdlib.assert(v240, {\n        at: './index.rsh:81:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n      });\n      const v242 = stdlib.le(v229, v200);\n      stdlib.assert(v242, {\n        at: './index.rsh:83:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n      });\n      const v246 = stdlib.sub(v200, v229);\n      ;\n      let v249;\n      const v250 = stdlib.eq(v246, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n\n      if (v250) {\n        v249 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n      } else {\n        const v251 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), v246);\n        v249 = v251;\n      }\n\n      stdlib.protect(ctc2, await interact.displayTokenDetails(v246, v249), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:85:43:application call to \"liftedInteract\" (defined at: ./index.rsh:85:43:application)'],\n        msg: 'displayTokenDetails',\n        who: 'OmegaUser'\n      });\n      const v253 = stdlib.add(v191, v229);\n      const v254 = stdlib.add(v192, v234);\n      const cv191 = v253;\n      const cv192 = v254;\n      const cv193 = v235;\n      const cv200 = v246;\n      const cv201 = v201;\n      const cv202 = v202;\n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      continue;\n    }\n  }\n\n  ;\n  undefined;\n\n  if (v202) {\n    return;\n  } else {\n    undefined;\n    return;\n  }\n}\n;\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\ndup\nint 8\nextract_uint64\nstore 2\nextract 16 32\nstore 3\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 96\n==\nassert\ndup\nextract 0 32\nstore 255\ndup\nextract 32 64\nstore 254\npop\ntxn Sender\nglobal CreatorAddress\n==\nassert\nload 255\nstore 3\n// \"CheckPay\"\n// \"./index.rsh:41:13:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:41:13:dot\"\n// \"[]\"\nint 100000\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl2_checkTxnK:\npop\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nint 0\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 1000000\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 6\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64(RFJBAAAAAAA=)\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64(RGFhcmFDb2luAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)\ndig 1\ngtxns ConfigAssetName\n==\nassert\nint 96\nbzero\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nload 3\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\ngaids\nstore 253\nbyte base64(AAAAAAAAALA=)\nload 253\nitob\nconcat\nlog // 16\nload 253\nstore 252\ntxn Sender\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l3_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:54:13:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:54:13:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nint 16\nbzero\nglobal Round\nitob\nconcat\nbyte base64(AAAAAAAPQkA=)\nconcat\nbyte base64(AAAAAAAPQkA=)\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl3_afterHandler1:\nl4_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l5_afterHandler3\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 152\n==\nassert\ndup\nint 0\nextract_uint64\nstore 247\ndup\nint 8\nextract_uint64\nstore 246\ndup\nextract 16 32\nstore 245\ndup\nextract 48 32\nstore 244\ndup\nextract 80 64\nstore 243\ndup\nint 144\nextract_uint64\nstore 242\npop\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:72:16:dot\"\n// \"[]\"\nload 242\ndup\nbz l6_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl6_checkTxnK:\npop\n// Nothing\n// \"./index.rsh:81:12:application\"\n// \"[]\"\ntxn Sender\nload 245\n==\nassert\n// Nothing\n// \"./index.rsh:83:12:application\"\n// \"[]\"\nload 247\nload 251\n<=\nassert\nload 247\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns AssetAmount\n==\nassert\nload 254\ndig 1\ngtxns XferAsset\n==\nassert\nint axfer\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\ntxn Sender\ndig 1\ngtxns AssetReceiver\n==\nassert\nl7_checkTxnK:\npop\nload 255\nload 254\nitob\nconcat\nload 253\nload 247\n+\nitob\nload 252\nload 242\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nload 247\n-\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl5_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l8_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:76:20:dot\"\n// \"[]\"\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nload 252\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl8_afterHandler4:\nint 0\nassert\nloopBody2:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\ndup\nint 24\nextract_uint64\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\ndup\nextract 40 1\nbtoi\nstore 250\npop\ndup\nextract 0 32\nstore 249\ndup\nint 32\nextract_uint64\nstore 248\npop\nload 255\nint 1000000\n<=\nbz l9_ifF\nload 253\nint 5\n+\nstore 247\nload 249\nload 248\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nload 247\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 81\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_ifF:\nload 254\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 249\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nload 250\nbz l11_ifF\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl12_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl11_ifF:\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 248\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl13_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nload 3\nconcat\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nglobal ZeroAddress\nstore 3\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  escrow: `#pragma version 5\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 81,\n  unsupported: [],\n  version: 5\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v168\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v168\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v229\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v230\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v231\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v232\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v233\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v234\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v176\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"oe_v176\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v229\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v230\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v231\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v232\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v233\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v234\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x6080604052604051620025cf380380620025cf8339810160408190526200002691620003d6565b6000808055436003556040805160e08101825260c081018381528152815160208082018452848252808301919091528251606080820185528582528183018690528185018690528385019190915283518083018552858152818401526080830185905260a083019490945282518551815285820151518051828401529091015181840152915190927f819125e79b475e13c17f8bbe764be761fb45f83700d23d01d0548e85c578b478928290030190a1620000e434156007620002c1565b8051682230b0b930a1b7b4b760b91b90526020808201516244524160e81b90526040808301805160009081905281518401819052905182018190526060840151528251518151928301520160408051601f1981840301815290829052602083810151516001600160c01b031916908301529060280160408051808303601f1901815282825284820151805160208083015192850151908601919091529284015260608301919091529060800160408051601f1981840301815282825260608601515160208401529101604051602081830303815290604052620f42406012604051620001d090620002eb565b620001e196959493929190620004b9565b604051809103906000f080158015620001fe573d6000803e3d6000fd5b506001600160a01b03166080820181905260a082018190526040519081527fd45a21bb3be46aa724db9dba47a0334eec86e5cc3d8b3a9f2dab643ff361e7ec9060200160405180910390a1604080518082018252600060208083018281523380855260a08701516001600160a01b0390811683526001948590554390945585519283015251909116928101929092529060600160405160208183030381529060405260029080519060200190620002b7929190620002f9565b5050505062000561565b81620002e75760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b610f75806200165a83390190565b828054620003079062000524565b90600052602060002090601f0160209004810192826200032b576000855562000376565b82601f106200034657805160ff191683800117855562000376565b8280016001018555821562000376579182015b828111156200037657825182559160200191906001019062000359565b506200038492915062000388565b5090565b5b8082111562000384576000815560010162000389565b604080519081016001600160401b0381118282101715620003d057634e487b7160e01b600052604160045260246000fd5b60405290565b60008183036060811215620003ea57600080fd5b620003f46200039f565b835181526040601f19830112156200040b57600080fd5b6040519150602082016001600160401b03811183821017156200043e57634e487b7160e01b600052604160045260246000fd5b6040526200044b6200039f565b60208581015182526040909501518186015282529283015250919050565b6000815180845260005b81811015620004915760208185018101518683018201520162000473565b81811115620004a4576000602083870101525b50601f01601f19169290920160200192915050565b60c081526000620004ce60c083018962000469565b8281036020840152620004e2818962000469565b90508281036040840152620004f8818862000469565b905082810360608401526200050e818762000469565b6080840195909552505060a00152949350505050565b600181811c908216806200053957607f821691505b602082108114156200055b57634e487b7160e01b600052602260045260246000fd5b50919050565b6110e980620005716000396000f3fe6080604052600436106100565760003560e01c80630d19a5fb1461005f5780631e93b0f1146100725780637963168e1461009657806383230757146100a95780639afc5bcc146100be578063ab53f2c6146100d157005b3661005d57005b005b61005d61006d366004610d52565b6100f4565b34801561007e57600080fd5b506003545b6040519081526020015b60405180910390f35b61005d6100a4366004610d52565b6102a2565b3480156100b557600080fd5b50600154610083565b61005d6100cc366004610d6a565b610434565b3480156100dd57600080fd5b506100e6610664565b60405161008d929190610da9565b6101046005600054146013610701565b61011e8135158061011757506001548235145b6014610701565b60008080556002805461013090610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610de3565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610e56565b90506101d58160e001514310156015610701565b7f64c05390f66d4c96d69b55a2d6f7bb5135997731e2b63f4a719a786bc0579627826040516102049190610f0e565b60405180910390a161021834156012610701565b610220610c21565b815181516001600160a01b039182169052602080840151835192169181019190915260408084015182840180519190915260608086015182519094019390935280514392019190915260808085015182519093019290925260a08085015182519093019290925260c0840151905190151591015261029d8161072b565b505050565b6102b2600160005414600a610701565b6102cc813515806102c557506001548235145b600b610701565b6000808055600280546102de90610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90610de3565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b505050505080602001905181019061036f9190610f33565b90507f9f41c6cf17ede288cbb2cfbbafdd05b2b2025dea3b047cdb79dbc892d7a9286d826040516103a09190610f0e565b60405180910390a16103b434156008610701565b80516103cc906001600160a01b031633146009610701565b6103d4610c21565b815181516001600160a01b0391821690526020808401518351921691810191909152808201805160009081905281519092018290528051436040909101528051620f424060609091018190528151608001525160a0015261029d8161072b565b610444600560005414600f610701565b61045e8135158061045757506001548235145b6010610701565b60008080556002805461047090610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90610de3565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b50505050508060200190518101906105019190610e56565b90506105148160e0015143106011610701565b7fe3dd4d1e92f956195cdb05d6bf62cc37b6a849b951ebec81f91722b37d7ef9a8826040516105439190610fa0565b60405180910390a161055c3460e084013514600c610701565b61058a61056f6080840160608501611018565b6001600160a01b0316336001600160a01b031614600d610701565b60808101516105a19060208401351115600e610701565b6105b78160200151338460200160000135610952565b6105bf610c21565b815181516001600160a01b039182169052602080840151835192169181019190915260408301516105f3918501359061104b565b602082015152606082015161060d9060e08501359061104b565b6020808301805182019290925290514360409091015260808301516106359185013590611063565b6020820180516060019190915260a08084015182516080015260c0840151915191151591015261029d8161072b565b60006060600054600280805461067990610de3565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590610de3565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b50505050509050915091509091565b816107275760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b5050565b604080516020810190915260008152602082015151620f4240106108ad57600582602001516040015161075e919061104b565b81526040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091528251516001600160a01b0390811682528351602090810151909116818301528084018051516040808501919091528151830151606080860191909152825101516080808601919091528251015160a080860191909152915190910151151560c0840152835160e0840152600560005543600155516108839183910160006101008201905060018060a01b038084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151151560c083015260e083015160e083015292915050565b604051602081830303815290604052600290805190602001906108a7929190610c83565b50505050565b81515160208084015101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156108ee573d6000803e3d6000fd5b50610909826000015160200151836020015160800151610966565b816020015160a001511561092d576000808055600181905561072790600290610d07565b81516020015161093c90610979565b6000808055600181905561072790600290610d07565b61095d83838361098e565b61029d57600080fd5b6109708282610a5f565b61072757600080fd5b61098281610b3a565b61098b57600080fd5b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839283929188169183916109ed9161107a565b60006040518083038185875af1925050503d8060008114610a2a576040519150601f19603f3d011682016040523d82523d6000602084013e610a2f565b606091505b5091509150610a4082826002610bdf565b5080806020019051810190610a559190611096565b9695505050505050565b6000806000846001600160a01b031660006342966c6860e01b86604051602401610a8b91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ac9919061107a565b60006040518083038185875af1925050503d8060008114610b06576040519150601f19603f3d011682016040523d82523d6000602084013e610b0b565b606091505b5091509150610b1c82826003610bdf565b5080806020019051810190610b319190611096565b95945050505050565b60408051600481526024810182526020810180516001600160e01b031663083197ef60e41b1790529051600091829182916001600160a01b038616918391610b819161107a565b60006040518083038185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5091509150610bd482826004610bdf565b506001949350505050565b60608315610bee575081610c1a565b825115610bfe5782518084602001fd5b60405163100960cb60e01b81526004810183905260240161071e565b9392505050565b60408051608081018252600091810182815260608201929092529081908152602001610c7e6040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054610c8f90610de3565b90600052602060002090601f016020900481019282610cb15760008555610cf7565b82601f10610cca57805160ff1916838001178555610cf7565b82800160010185558215610cf7579182015b82811115610cf7578251825591602001919060010190610cdc565b50610d03929150610d3d565b5090565b508054610d1390610de3565b6000825580601f10610d23575050565b601f01602090049060005260206000209081019061098b91905b5b80821115610d035760008155600101610d3e565b600060408284031215610d6457600080fd5b50919050565b60006101008284031215610d6457600080fd5b60005b83811015610d98578181015183820152602001610d80565b838111156108a75750506000910152565b8281526040602082015260008251806040840152610dce816060850160208701610d7d565b601f01601f1916919091016060019392505050565b600181811c90821680610df757607f821691505b60208210811415610d6457634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461098b57600080fd5b8051610e3881610e18565b919050565b801515811461098b57600080fd5b8051610e3881610e3d565b6000610100808385031215610e6a57600080fd5b6040519081019067ffffffffffffffff82118183101715610e9b57634e487b7160e01b600052604160045260246000fd5b8160405283519150610eac82610e18565b818152610ebb60208501610e2d565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152610ef460c08501610e4b565b60c082015260e084015160e0820152809250505092915050565b81358152604081016020830135610f2481610e3d565b80151560208401525092915050565b600060408284031215610f4557600080fd5b6040516040810181811067ffffffffffffffff82111715610f7657634e487b7160e01b600052604160045260246000fd5b6040528251610f8481610e18565b81526020830151610f9481610e18565b60208201529392505050565b81358152602080830135908201526040808301359082015261010081016060830135610fcb81610e18565b6001600160a01b039081166060840152608084013590610fea82610e18565b8082166080850152505060a083013560a083015260c083013560c083015260e083013560e083015292915050565b60006020828403121561102a57600080fd5b8135610c1a81610e18565b634e487b7160e01b600052601160045260246000fd5b6000821982111561105e5761105e611035565b500190565b60008282101561107557611075611035565b500390565b6000825161108c818460208701610d7d565b9190910192915050565b6000602082840312156110a857600080fd5b8151610c1a81610e3d56fea26469706673582212200abbd202f1732e9c062f604c679cbe75e69a7d5b53bb094312763c6aa4f16c4364736f6c6343000809003360806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea26469706673582212204dcf61cd8974471efc1ca7ec0d6a36761c41f9d235dd7b833f96f6c674982e9864736f6c63430008090033`,\n  BytecodeLen: 9679,\n  Which: `oD`,\n  version: 5,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\nexport const _Participants = {\n  \"NormalUser\": NormalUser,\n  \"OmegaUser\": OmegaUser\n};\nexport const _APIs = {};","map":{"version":3,"sources":["/home/paradoxfly/reach/bonding-curve-sale/src/build/index.main.mjs"],"names":["_version","_versionHash","_backendVersion","getExports","s","stdlib","reachStdlib","_getViews","viewlib","ctc0","T_Address","ctc1","T_Token","ctc2","T_UInt","ctc3","T_Bool","infos","views","_getMaps","T_Tuple","mapDataTy","NormalUser","ctcTop","interact","_initialize","undefined","Promise","reject","Error","ctc","T_Bytes","checkedBigNumberify","UInt_max","T_Null","ctc4","ctc5","ctc6","v164","protect","name","txn1","recv","didSend","evt_cnt","funcNum","out_tys","timeoutAt","waitIfNotPresent","data","v168","secs","v170","time","v169","v25","from","v167","v172","v173","v174","v175","v176","v177","getOutput","acceptToken","at","fs","msg","who","txn2","v188","v187","v49","v186","v190","addressEq","assert","v191","v192","v193","v200","v201","v202","v209","le","v211","add","v213","selfAddress","v216","v217","eq","v218","div","showBalance","displayTokenDetails","v221","buyToken","v222","v223","v224","mul","v226","v227","txn3","sendrecv","args","lct","onlyIf","pay","sim_p","sim_r","txns","mapRefs","mapsPrev","mapsNext","v229","v230","v231","v232","v233","v234","v236","v235","v88","v228","push","amt","kind","tok","v240","v242","v246","sub","to","v253","v254","cv191","cv192","cv193","cv200","cv201","cv202","isHalt","simTokenBurn","simTokenDestroy","soloSend","tys","didTimeout","txn4","v257","v256","v120","v255","OmegaUser","v163","simTokenNew","v182","v183","v184","paidBy","v249","v250","v251","_ALGO","appApproval","appClear","escrow","mapDataKeys","mapDataSize","stateKeys","stateSize","unsupported","version","_ETH","ABI","Bytecode","BytecodeLen","Which","_Connectors","ALGO","ETH","_Participants","_APIs"],"mappings":"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AA0hCZC,EAAAA,WAAW,EAAE,CA1hCD;AA2hCZC,EAAAA,WAAW,EAAE,CA3hCD;AA4hCZC,EAAAA,SAAS,EAAE,CA5hCC;AA6hCZC,EAAAA,SAAS,EAAE,EA7hCC;AA8hCZC,EAAAA,WAAW,EAAE,EA9hCD;AA+hCZC,EAAAA,OAAO,EAAE;AA/hCG,CAAd;AAiiCA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlZa;AAmZXC,EAAAA,QAAQ,EAAG,k6lBAnZA;AAoZXC,EAAAA,WAAW,EAAE,IApZF;AAqZXC,EAAAA,KAAK,EAAG,IArZG;AAsZXL,EAAAA,OAAO,EAAE,CAtZE;AAuZX5J,EAAAA,KAAK,EAAE;AAvZI,CAAb;AA0ZA,OAAO,MAAMkK,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEhB,KADmB;AAEzBiB,EAAAA,GAAG,EAAEP;AAFoB,CAApB;AAIP,OAAO,MAAMQ,aAAa,GAAG;AAC3B,gBAAcjK,UADa;AAE3B,eAAaqI;AAFc,CAAtB;AAIP,OAAO,MAAM6B,KAAK,GAAG,EAAd","sourcesContent":["// Automatically generated with Reach 0.1.6 (66f7fd96)\n/* eslint-disable */\nexport const _version = '0.1.6';\nexport const _versionHash = '0.1.6 (66f7fd96)';\nexport const _backendVersion = 5;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_UInt;\n  const ctc3 = stdlib.T_Bool;\n  \n  return {\n    infos: {\n      },\n    views: {\n      1: [ctc0, ctc1],\n      5: [ctc0, ctc1, ctc2, ctc2, ctc2, ctc2, ctc3, ctc2]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function NormalUser(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for NormalUser expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc3, ctc4]);\n  const ctc6 = stdlib.T_Bool;\n  \n  \n  const v164 = stdlib.protect(ctc0, interact.name, 'for NormalUser\\'s interact field name');\n  \n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc0],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v168], secs: v170, time: v169, didSend: v25, from: v167 } = txn1;\n  ;\n  const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v176 = undefined;\n  const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n  stdlib.protect(ctc2, await interact.acceptToken(v177), {\n    at: './index.rsh:1:39:application',\n    fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:53:34:application call to \"liftedInteract\" (defined at: ./index.rsh:53:34:application)'],\n    msg: 'acceptToken',\n    who: 'NormalUser'\n    });\n  \n  const txn2 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 0,\n    funcNum: 1,\n    out_tys: [],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v188, time: v187, didSend: v49, from: v186 } = txn2;\n  ;\n  const v190 = stdlib.addressEq(v167, v186);\n  stdlib.assert(v190, {\n    at: './index.rsh:54:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'NormalUser'\n    });\n  let v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n  let v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n  let v193 = v187;\n  let v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v202 = false;\n  \n  while ((() => {\n    const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    \n    return v209;})()) {\n    const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n    const v213 = ctc.selfAddress();\n    let v216;\n    const v217 = stdlib.eq(v200, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n    if (v217) {\n      v216 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n      }\n    else {\n      const v218 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), v200);\n      v216 = v218;\n      }\n    stdlib.protect(ctc2, await interact.showBalance(v177), {\n      at: './index.rsh:66:38:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'showBalance',\n      who: 'NormalUser'\n      });\n    stdlib.protect(ctc2, await interact.displayTokenDetails(v200, v216), {\n      at: './index.rsh:67:46:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'displayTokenDetails',\n      who: 'NormalUser'\n      });\n    const v221 = stdlib.protect(ctc5, await interact.buyToken(v200, v216), {\n      at: './index.rsh:68:56:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: 'buyToken',\n      who: 'NormalUser'\n      });\n    const v222 = v221[stdlib.checkedBigNumberify('./index.rsh:68:13:array', stdlib.UInt_max, 0)];\n    const v223 = v221[stdlib.checkedBigNumberify('./index.rsh:68:13:array', stdlib.UInt_max, 1)];\n    const v224 = stdlib.mul(v222, v216);\n    const v226 = stdlib.le(v222, v200);\n    stdlib.assert(v226, {\n      at: './index.rsh:70:13:application',\n      fs: ['at ./index.rsh:62:20:application call to [unknown function] (defined at: ./index.rsh:62:24:function exp)'],\n      msg: null,\n      who: 'NormalUser'\n      });\n    \n    const v227 = stdlib.addressEq(v223, v213);\n    \n    const txn3 = await (ctc.sendrecv({\n      args: [v167, v177, v191, v192, v200, v201, v202, v211, v222, v216, v213, v223, v164, v224],\n      evt_cnt: 6,\n      funcNum: 3,\n      lct: v193,\n      onlyIf: v227,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      pay: [v224, []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v229, v230, v231, v232, v233, v234], secs: v236, time: v235, didSend: v88, from: v228 } = txn3;\n        \n        sim_r.txns.push({\n          amt: v234,\n          kind: 'to',\n          tok: undefined\n          });\n        const v240 = stdlib.addressEq(v228, v231);\n        stdlib.assert(v240, {\n          at: './index.rsh:81:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n          });\n        const v242 = stdlib.le(v229, v200);\n        stdlib.assert(v242, {\n          at: './index.rsh:83:12:application',\n          fs: [],\n          msg: null,\n          who: 'NormalUser'\n          });\n        const v246 = stdlib.sub(v200, v229);\n        sim_r.txns.push({\n          amt: v229,\n          kind: 'from',\n          to: v228,\n          tok: v177\n          });\n        const v253 = stdlib.add(v191, v229);\n        const v254 = stdlib.add(v192, v234);\n        const cv191 = v253;\n        const cv192 = v254;\n        const cv193 = v235;\n        const cv200 = v246;\n        const cv201 = v201;\n        const cv202 = v202;\n        \n        (() => {\n          const v191 = cv191;\n          const v192 = cv192;\n          const v193 = cv193;\n          const v200 = cv200;\n          const v201 = cv201;\n          const v202 = cv202;\n          \n          if ((() => {\n            const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n            \n            return v209;})()) {\n            const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.txns.push({\n              amt: v192,\n              kind: 'from',\n              to: v167,\n              tok: undefined\n              });\n            stdlib.simTokenBurn(sim_r, v177, v201);\n            if (v202) {\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }\n            else {\n              stdlib.simTokenDestroy(sim_r, v177);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }}})();\n        return sim_r;\n        }),\n      soloSend: false,\n      timeoutAt: ['time', v211],\n      tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3, ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.sendrecv({\n        args: [v167, v177, v191, v192, v200, v201, v202, v211],\n        evt_cnt: 0,\n        funcNum: 4,\n        lct: v193,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn4) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [], secs: v257, time: v256, didSend: v120, from: v255 } = txn4;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const cv191 = v191;\n          const cv192 = v192;\n          const cv193 = v256;\n          const cv200 = v200;\n          const cv201 = v201;\n          const cv202 = v202;\n          \n          (() => {\n            const v191 = cv191;\n            const v192 = cv192;\n            const v193 = cv193;\n            const v200 = cv200;\n            const v201 = cv201;\n            const v202 = cv202;\n            \n            if ((() => {\n              const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n              \n              return v209;})()) {\n              const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.txns.push({\n                amt: v192,\n                kind: 'from',\n                to: v167,\n                tok: undefined\n                });\n              stdlib.simTokenBurn(sim_r, v177, v201);\n              if (v202) {\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              else {\n                stdlib.simTokenDestroy(sim_r, v177);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }}})();\n          return sim_r;\n          }),\n        soloSend: false,\n        timeoutAt: undefined,\n        tys: [ctc4, ctc1, ctc3, ctc3, ctc3, ctc3, ctc6, ctc3],\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v257, time: v256, didSend: v120, from: v255 } = txn4;\n      ;\n      const cv191 = v191;\n      const cv192 = v192;\n      const cv193 = v256;\n      const cv200 = v200;\n      const cv201 = v201;\n      const cv202 = v202;\n      \n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      \n      continue;\n      }\n    else {\n      const {data: [v229, v230, v231, v232, v233, v234], secs: v236, time: v235, didSend: v88, from: v228 } = txn3;\n      ;\n      const v240 = stdlib.addressEq(v228, v231);\n      stdlib.assert(v240, {\n        at: './index.rsh:81:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n        });\n      const v242 = stdlib.le(v229, v200);\n      stdlib.assert(v242, {\n        at: './index.rsh:83:12:application',\n        fs: [],\n        msg: null,\n        who: 'NormalUser'\n        });\n      const v246 = stdlib.sub(v200, v229);\n      ;\n      const v253 = stdlib.add(v191, v229);\n      const v254 = stdlib.add(v192, v234);\n      const cv191 = v253;\n      const cv192 = v254;\n      const cv193 = v235;\n      const cv200 = v246;\n      const cv201 = v201;\n      const cv202 = v202;\n      \n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      \n      continue;}\n    \n    }\n  ;\n  undefined;\n  if (v202) {\n    return;\n    }\n  else {\n    undefined;\n    return;\n    }\n  \n  \n  \n  };\nexport async function OmegaUser(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for OmegaUser expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_Token;\n  const ctc2 = stdlib.T_Null;\n  const ctc3 = stdlib.T_UInt;\n  const ctc4 = stdlib.T_Address;\n  \n  \n  const v163 = stdlib.protect(ctc0, interact.name, 'for OmegaUser\\'s interact field name');\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v163],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:41:13:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc0],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v168], secs: v170, time: v169, didSend: v25, from: v167 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n      const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n      const v176 = stdlib.simTokenNew(sim_r, v172, v173, v174, v175, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), undefined);\n      const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc0],\n    waitIfNotPresent: false\n    }));\n  const {data: [v168], secs: v170, time: v169, didSend: v25, from: v167 } = txn1;\n  ;\n  const v172 = 'DaaraCoin\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v173 = 'DRA\u0000\u0000\u0000\u0000\u0000';\n  const v174 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v175 = '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000';\n  const v176 = undefined;\n  const v177 = await txn1.getOutput('tokenNew', 'v176', ctc1, v176);\n  stdlib.protect(ctc2, await interact.acceptToken(v177), {\n    at: './index.rsh:50:25:application',\n    fs: ['at ./index.rsh:49:17:application call to [unknown function] (defined at: ./index.rsh:49:21:function exp)'],\n    msg: 'acceptToken',\n    who: 'OmegaUser'\n    });\n  let v182;\n  const v183 = stdlib.eq(stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n  if (v183) {\n    v182 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n    }\n  else {\n    const v184 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    v182 = v184;\n    }\n  stdlib.protect(ctc2, await interact.displayTokenDetails(stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000), v182), {\n    at: './index.rsh:51:44:application',\n    fs: ['at ./index.rsh:49:17:application call to [unknown function] (defined at: ./index.rsh:49:21:function exp)'],\n    msg: 'displayTokenDetails',\n    who: 'OmegaUser'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v167, v177],\n    evt_cnt: 0,\n    funcNum: 1,\n    lct: v169,\n    onlyIf: true,\n    out_tys: [],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [], secs: v188, time: v187, didSend: v49, from: v186 } = txn2;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v190 = stdlib.addressEq(v167, v186);\n      stdlib.assert(v190, {\n        at: './index.rsh:54:13:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'OmegaUser'\n        });\n      const v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n      const v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n      const v193 = v187;\n      const v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n      const v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n      const v202 = false;\n      \n      if ((() => {\n        const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n        \n        return v209;})()) {\n        const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.txns.push({\n          amt: v192,\n          kind: 'from',\n          to: v167,\n          tok: undefined\n          });\n        stdlib.simTokenBurn(sim_r, v177, v201);\n        if (v202) {\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n            })\n          sim_r.isHalt = true;\n          }\n        else {\n          stdlib.simTokenDestroy(sim_r, v177);\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n            })\n          sim_r.isHalt = true;\n          }}\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc4, ctc1],\n    waitIfNotPresent: false\n    }));\n  const {data: [], secs: v188, time: v187, didSend: v49, from: v186 } = txn2;\n  ;\n  const v190 = stdlib.addressEq(v167, v186);\n  stdlib.assert(v190, {\n    at: './index.rsh:54:13:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'OmegaUser'\n    });\n  let v191 = stdlib.checkedBigNumberify('./index.rsh:56:35:decimal', stdlib.UInt_max, 0);\n  let v192 = stdlib.checkedBigNumberify('./index.rsh:56:38:decimal', stdlib.UInt_max, 0);\n  let v193 = v187;\n  let v200 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v201 = stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000);\n  let v202 = false;\n  \n  while ((() => {\n    const v209 = stdlib.le(v191, stdlib.checkedBigNumberify('./index.rsh:44:18:decimal', stdlib.UInt_max, 1000000));\n    \n    return v209;})()) {\n    const v211 = stdlib.add(v193, stdlib.checkedBigNumberify('./index.rsh:75:29:decimal', stdlib.UInt_max, 5));\n    const txn3 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 3,\n      out_tys: [ctc3, ctc3, ctc4, ctc4, ctc0, ctc3],\n      timeoutAt: ['time', v211],\n      waitIfNotPresent: false\n      }));\n    if (txn3.didTimeout) {\n      const txn4 = await (ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 4,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v257, time: v256, didSend: v120, from: v255 } = txn4;\n      ;\n      const cv191 = v191;\n      const cv192 = v192;\n      const cv193 = v256;\n      const cv200 = v200;\n      const cv201 = v201;\n      const cv202 = v202;\n      \n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      \n      continue;\n      }\n    else {\n      const {data: [v229, v230, v231, v232, v233, v234], secs: v236, time: v235, didSend: v88, from: v228 } = txn3;\n      ;\n      stdlib.protect(ctc2, await interact.paidBy(v233, v229, v230, v231), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:80:30:application call to \"liftedInteract\" (defined at: ./index.rsh:80:30:application)'],\n        msg: 'paidBy',\n        who: 'OmegaUser'\n        });\n      \n      const v240 = stdlib.addressEq(v228, v231);\n      stdlib.assert(v240, {\n        at: './index.rsh:81:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n        });\n      const v242 = stdlib.le(v229, v200);\n      stdlib.assert(v242, {\n        at: './index.rsh:83:12:application',\n        fs: [],\n        msg: null,\n        who: 'OmegaUser'\n        });\n      const v246 = stdlib.sub(v200, v229);\n      ;\n      let v249;\n      const v250 = stdlib.eq(v246, stdlib.checkedBigNumberify('./index.rsh:17:22:decimal', stdlib.UInt_max, 0));\n      if (v250) {\n        v249 = stdlib.checkedBigNumberify('./index.rsh:17:32:decimal', stdlib.UInt_max, 50000);\n        }\n      else {\n        const v251 = stdlib.div(stdlib.checkedBigNumberify('./index.rsh:18:15:decimal', stdlib.UInt_max, 50000000000), v246);\n        v249 = v251;\n        }\n      stdlib.protect(ctc2, await interact.displayTokenDetails(v246, v249), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:85:43:application call to \"liftedInteract\" (defined at: ./index.rsh:85:43:application)'],\n        msg: 'displayTokenDetails',\n        who: 'OmegaUser'\n        });\n      \n      const v253 = stdlib.add(v191, v229);\n      const v254 = stdlib.add(v192, v234);\n      const cv191 = v253;\n      const cv192 = v254;\n      const cv193 = v235;\n      const cv200 = v246;\n      const cv201 = v201;\n      const cv202 = v202;\n      \n      v191 = cv191;\n      v192 = cv192;\n      v193 = cv193;\n      v200 = cv200;\n      v201 = cv201;\n      v202 = cv202;\n      \n      continue;}\n    \n    }\n  ;\n  undefined;\n  if (v202) {\n    return;\n    }\n  else {\n    undefined;\n    return;\n    }\n  \n  \n  \n  };\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\ndup\nint 8\nextract_uint64\nstore 2\nextract 16 32\nstore 3\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 96\n==\nassert\ndup\nextract 0 32\nstore 255\ndup\nextract 32 64\nstore 254\npop\ntxn Sender\nglobal CreatorAddress\n==\nassert\nload 255\nstore 3\n// \"CheckPay\"\n// \"./index.rsh:41:13:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:41:13:dot\"\n// \"[]\"\nint 100000\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl2_checkTxnK:\npop\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nint 0\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 1000000\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 6\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64(RFJBAAAAAAA=)\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64(RGFhcmFDb2luAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)\ndig 1\ngtxns ConfigAssetName\n==\nassert\nint 96\nbzero\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nload 3\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\ngaids\nstore 253\nbyte base64(AAAAAAAAALA=)\nload 253\nitob\nconcat\nlog // 16\nload 253\nstore 252\ntxn Sender\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 40\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l3_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:54:13:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:54:13:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nint 16\nbzero\nglobal Round\nitob\nconcat\nbyte base64(AAAAAAAPQkA=)\nconcat\nbyte base64(AAAAAAAPQkA=)\nconcat\nint 0\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl3_afterHandler1:\nl4_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l5_afterHandler3\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 152\n==\nassert\ndup\nint 0\nextract_uint64\nstore 247\ndup\nint 8\nextract_uint64\nstore 246\ndup\nextract 16 32\nstore 245\ndup\nextract 48 32\nstore 244\ndup\nextract 80 64\nstore 243\ndup\nint 144\nextract_uint64\nstore 242\npop\nglobal Round\nload 248\n<\nassert\n// \"CheckPay\"\n// \"./index.rsh:72:16:dot\"\n// \"[]\"\nload 242\ndup\nbz l6_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Receiver\n==\nassert\nl6_checkTxnK:\npop\n// Nothing\n// \"./index.rsh:81:12:application\"\n// \"[]\"\ntxn Sender\nload 245\n==\nassert\n// Nothing\n// \"./index.rsh:83:12:application\"\n// \"[]\"\nload 247\nload 251\n<=\nassert\nload 247\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns AssetAmount\n==\nassert\nload 254\ndig 1\ngtxns XferAsset\n==\nassert\nint axfer\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\ntxn Sender\ndig 1\ngtxns AssetReceiver\n==\nassert\nl7_checkTxnK:\npop\nload 255\nload 254\nitob\nconcat\nload 253\nload 247\n+\nitob\nload 252\nload 242\n+\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nload 247\n-\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl5_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l8_afterHandler4\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\ndup\nint 48\nextract_uint64\nstore 252\ndup\nint 56\nextract_uint64\nstore 251\ndup\nint 64\nextract_uint64\nstore 250\ndup\nextract 72 1\nbtoi\nstore 249\ndup\nint 73\nextract_uint64\nstore 248\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\nglobal Round\nload 248\n>=\nassert\n// \"CheckPay\"\n// \"./index.rsh:76:20:dot\"\n// \"[]\"\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nload 252\nitob\nconcat\nglobal Round\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob\nconcat\nload 249\nitob // bool\nsubstring 7 8\nconcat\nb loopBody2\nl8_afterHandler4:\nint 0\nassert\nloopBody2:\ndup\nint 0\nextract_uint64\nstore 255\ndup\nint 8\nextract_uint64\nstore 254\ndup\nint 16\nextract_uint64\nstore 253\ndup\nint 24\nextract_uint64\nstore 252\ndup\nint 32\nextract_uint64\nstore 251\ndup\nextract 40 1\nbtoi\nstore 250\npop\ndup\nextract 0 32\nstore 249\ndup\nint 32\nextract_uint64\nstore 248\npop\nload 255\nint 1000000\n<=\nbz l9_ifF\nload 253\nint 5\n+\nstore 247\nload 249\nload 248\nitob\nconcat\nload 255\nitob\nconcat\nload 254\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nload 247\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 81\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_ifF:\nload 254\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 249\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nload 250\nbz l11_ifF\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl12_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl11_ifF:\nload 0\ndup\nint 1\n+\nstore 0\nint acfg\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nload 248\ndig 1\ngtxns ConfigAsset\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetTotal\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDecimals\n==\nassert\nint 0\ndig 1\ngtxns ConfigAssetDefaultFrozen\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetUnitName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetName\n==\nassert\nbyte base64()\ndig 1\ngtxns ConfigAssetURL\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetMetadataHash\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetManager\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetReserve\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetFreeze\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns ConfigAssetClawback\n==\nassert\npop\nint 0\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nload 3\ndig 1\ngtxns Sender\n==\nassert\nglobal CreatorAddress\ndig 1\ngtxns CloseRemainderTo\n==\nassert\nl13_checkTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nload 3\nconcat\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nglobal ZeroAddress\nstore 3\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  escrow: `#pragma version 5\nglobal GroupSize\nint 1\n-\ndup\ngtxns TypeEnum\nint appl\n==\nassert\ngtxns ApplicationID\nint {{ApplicationID}}\n==\nassert\ndone:\nint 1\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 81,\n  unsupported: [],\n  version: 5\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v168\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v168\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T6\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v229\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v230\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v231\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v232\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v233\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v234\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v176\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"oe_v176\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v229\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v230\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v231\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v232\",\n                \"type\": \"address\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T4\",\n                \"name\": \"v233\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v234\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T12\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T10\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x6080604052604051620025cf380380620025cf8339810160408190526200002691620003d6565b6000808055436003556040805160e08101825260c081018381528152815160208082018452848252808301919091528251606080820185528582528183018690528185018690528385019190915283518083018552858152818401526080830185905260a083019490945282518551815285820151518051828401529091015181840152915190927f819125e79b475e13c17f8bbe764be761fb45f83700d23d01d0548e85c578b478928290030190a1620000e434156007620002c1565b8051682230b0b930a1b7b4b760b91b90526020808201516244524160e81b90526040808301805160009081905281518401819052905182018190526060840151528251518151928301520160408051601f1981840301815290829052602083810151516001600160c01b031916908301529060280160408051808303601f1901815282825284820151805160208083015192850151908601919091529284015260608301919091529060800160408051601f1981840301815282825260608601515160208401529101604051602081830303815290604052620f42406012604051620001d090620002eb565b620001e196959493929190620004b9565b604051809103906000f080158015620001fe573d6000803e3d6000fd5b506001600160a01b03166080820181905260a082018190526040519081527fd45a21bb3be46aa724db9dba47a0334eec86e5cc3d8b3a9f2dab643ff361e7ec9060200160405180910390a1604080518082018252600060208083018281523380855260a08701516001600160a01b0390811683526001948590554390945585519283015251909116928101929092529060600160405160208183030381529060405260029080519060200190620002b7929190620002f9565b5050505062000561565b81620002e75760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b610f75806200165a83390190565b828054620003079062000524565b90600052602060002090601f0160209004810192826200032b576000855562000376565b82601f106200034657805160ff191683800117855562000376565b8280016001018555821562000376579182015b828111156200037657825182559160200191906001019062000359565b506200038492915062000388565b5090565b5b8082111562000384576000815560010162000389565b604080519081016001600160401b0381118282101715620003d057634e487b7160e01b600052604160045260246000fd5b60405290565b60008183036060811215620003ea57600080fd5b620003f46200039f565b835181526040601f19830112156200040b57600080fd5b6040519150602082016001600160401b03811183821017156200043e57634e487b7160e01b600052604160045260246000fd5b6040526200044b6200039f565b60208581015182526040909501518186015282529283015250919050565b6000815180845260005b81811015620004915760208185018101518683018201520162000473565b81811115620004a4576000602083870101525b50601f01601f19169290920160200192915050565b60c081526000620004ce60c083018962000469565b8281036020840152620004e2818962000469565b90508281036040840152620004f8818862000469565b905082810360608401526200050e818762000469565b6080840195909552505060a00152949350505050565b600181811c908216806200053957607f821691505b602082108114156200055b57634e487b7160e01b600052602260045260246000fd5b50919050565b6110e980620005716000396000f3fe6080604052600436106100565760003560e01c80630d19a5fb1461005f5780631e93b0f1146100725780637963168e1461009657806383230757146100a95780639afc5bcc146100be578063ab53f2c6146100d157005b3661005d57005b005b61005d61006d366004610d52565b6100f4565b34801561007e57600080fd5b506003545b6040519081526020015b60405180910390f35b61005d6100a4366004610d52565b6102a2565b3480156100b557600080fd5b50600154610083565b61005d6100cc366004610d6a565b610434565b3480156100dd57600080fd5b506100e6610664565b60405161008d929190610da9565b6101046005600054146013610701565b61011e8135158061011757506001548235145b6014610701565b60008080556002805461013090610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461015c90610de3565b80156101a95780601f1061017e576101008083540402835291602001916101a9565b820191906000526020600020905b81548152906001019060200180831161018c57829003601f168201915b50505050508060200190518101906101c19190610e56565b90506101d58160e001514310156015610701565b7f64c05390f66d4c96d69b55a2d6f7bb5135997731e2b63f4a719a786bc0579627826040516102049190610f0e565b60405180910390a161021834156012610701565b610220610c21565b815181516001600160a01b039182169052602080840151835192169181019190915260408084015182840180519190915260608086015182519094019390935280514392019190915260808085015182519093019290925260a08085015182519093019290925260c0840151905190151591015261029d8161072b565b505050565b6102b2600160005414600a610701565b6102cc813515806102c557506001548235145b600b610701565b6000808055600280546102de90610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90610de3565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b505050505080602001905181019061036f9190610f33565b90507f9f41c6cf17ede288cbb2cfbbafdd05b2b2025dea3b047cdb79dbc892d7a9286d826040516103a09190610f0e565b60405180910390a16103b434156008610701565b80516103cc906001600160a01b031633146009610701565b6103d4610c21565b815181516001600160a01b0391821690526020808401518351921691810191909152808201805160009081905281519092018290528051436040909101528051620f424060609091018190528151608001525160a0015261029d8161072b565b610444600560005414600f610701565b61045e8135158061045757506001548235145b6010610701565b60008080556002805461047090610de3565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90610de3565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b50505050508060200190518101906105019190610e56565b90506105148160e0015143106011610701565b7fe3dd4d1e92f956195cdb05d6bf62cc37b6a849b951ebec81f91722b37d7ef9a8826040516105439190610fa0565b60405180910390a161055c3460e084013514600c610701565b61058a61056f6080840160608501611018565b6001600160a01b0316336001600160a01b031614600d610701565b60808101516105a19060208401351115600e610701565b6105b78160200151338460200160000135610952565b6105bf610c21565b815181516001600160a01b039182169052602080840151835192169181019190915260408301516105f3918501359061104b565b602082015152606082015161060d9060e08501359061104b565b6020808301805182019290925290514360409091015260808301516106359185013590611063565b6020820180516060019190915260a08084015182516080015260c0840151915191151591015261029d8161072b565b60006060600054600280805461067990610de3565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590610de3565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b50505050509050915091509091565b816107275760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b5050565b604080516020810190915260008152602082015151620f4240106108ad57600582602001516040015161075e919061104b565b81526040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091528251516001600160a01b0390811682528351602090810151909116818301528084018051516040808501919091528151830151606080860191909152825101516080808601919091528251015160a080860191909152915190910151151560c0840152835160e0840152600560005543600155516108839183910160006101008201905060018060a01b038084511683528060208501511660208401525060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151151560c083015260e083015160e083015292915050565b604051602081830303815290604052600290805190602001906108a7929190610c83565b50505050565b81515160208084015101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156108ee573d6000803e3d6000fd5b50610909826000015160200151836020015160800151610966565b816020015160a001511561092d576000808055600181905561072790600290610d07565b81516020015161093c90610979565b6000808055600181905561072790600290610d07565b61095d83838361098e565b61029d57600080fd5b6109708282610a5f565b61072757600080fd5b61098281610b3a565b61098b57600080fd5b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839283929188169183916109ed9161107a565b60006040518083038185875af1925050503d8060008114610a2a576040519150601f19603f3d011682016040523d82523d6000602084013e610a2f565b606091505b5091509150610a4082826002610bdf565b5080806020019051810190610a559190611096565b9695505050505050565b6000806000846001600160a01b031660006342966c6860e01b86604051602401610a8b91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ac9919061107a565b60006040518083038185875af1925050503d8060008114610b06576040519150601f19603f3d011682016040523d82523d6000602084013e610b0b565b606091505b5091509150610b1c82826003610bdf565b5080806020019051810190610b319190611096565b95945050505050565b60408051600481526024810182526020810180516001600160e01b031663083197ef60e41b1790529051600091829182916001600160a01b038616918391610b819161107a565b60006040518083038185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5091509150610bd482826004610bdf565b506001949350505050565b60608315610bee575081610c1a565b825115610bfe5782518084602001fd5b60405163100960cb60e01b81526004810183905260240161071e565b9392505050565b60408051608081018252600091810182815260608201929092529081908152602001610c7e6040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b905290565b828054610c8f90610de3565b90600052602060002090601f016020900481019282610cb15760008555610cf7565b82601f10610cca57805160ff1916838001178555610cf7565b82800160010185558215610cf7579182015b82811115610cf7578251825591602001919060010190610cdc565b50610d03929150610d3d565b5090565b508054610d1390610de3565b6000825580601f10610d23575050565b601f01602090049060005260206000209081019061098b91905b5b80821115610d035760008155600101610d3e565b600060408284031215610d6457600080fd5b50919050565b60006101008284031215610d6457600080fd5b60005b83811015610d98578181015183820152602001610d80565b838111156108a75750506000910152565b8281526040602082015260008251806040840152610dce816060850160208701610d7d565b601f01601f1916919091016060019392505050565b600181811c90821680610df757607f821691505b60208210811415610d6457634e487b7160e01b600052602260045260246000fd5b6001600160a01b038116811461098b57600080fd5b8051610e3881610e18565b919050565b801515811461098b57600080fd5b8051610e3881610e3d565b6000610100808385031215610e6a57600080fd5b6040519081019067ffffffffffffffff82118183101715610e9b57634e487b7160e01b600052604160045260246000fd5b8160405283519150610eac82610e18565b818152610ebb60208501610e2d565b602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152610ef460c08501610e4b565b60c082015260e084015160e0820152809250505092915050565b81358152604081016020830135610f2481610e3d565b80151560208401525092915050565b600060408284031215610f4557600080fd5b6040516040810181811067ffffffffffffffff82111715610f7657634e487b7160e01b600052604160045260246000fd5b6040528251610f8481610e18565b81526020830151610f9481610e18565b60208201529392505050565b81358152602080830135908201526040808301359082015261010081016060830135610fcb81610e18565b6001600160a01b039081166060840152608084013590610fea82610e18565b8082166080850152505060a083013560a083015260c083013560c083015260e083013560e083015292915050565b60006020828403121561102a57600080fd5b8135610c1a81610e18565b634e487b7160e01b600052601160045260246000fd5b6000821982111561105e5761105e611035565b500190565b60008282101561107557611075611035565b500390565b6000825161108c818460208701610d7d565b9190910192915050565b6000602082840312156110a857600080fd5b8151610c1a81610e3d56fea26469706673582212200abbd202f1732e9c062f604c679cbe75e69a7d5b53bb094312763c6aa4f16c4364736f6c6343000809003360806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea26469706673582212204dcf61cd8974471efc1ca7ec0d6a36761c41f9d235dd7b833f96f6c674982e9864736f6c63430008090033`,\n  BytecodeLen: 9679,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"NormalUser\": NormalUser,\n  \"OmegaUser\": OmegaUser\n  };\nexport const _APIs = {\n  };\n"]},"metadata":{},"sourceType":"module"}