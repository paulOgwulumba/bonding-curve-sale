{"ast":null,"code":"var _jsxFileName = \"/home/paradoxfly/reach/bonding-curve-sale/src/components/CreateOrImportAccount/CreateOrImportAccount.js\";\nimport React from 'react';\nimport styles from './CreateOrImportAccount.module.css';\nimport { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport { Provider } from '../../utils/constants';\n\nconst CreateOrImportAccount = props => {\n  const Status = {\n    INTRO: 'intro',\n    IMPORT_ACCOUNT: 'import account',\n    CREATE_ACCOUNT: 'create account',\n    LOADING: 'loading'\n  };\n  let [status, setStatus] = useState(Status.INTRO);\n  let [mnemonic, setMnemonic] = useState('');\n  let [mnemonicIsValid, setMnemonicIsValid] = useState(true);\n  let [isImportSuccessful, setIsImportSuccessful] = useState(false);\n  let [account, setAccount] = useState({});\n\n  const handleImportAccount = async (mnemonic, event) => {\n    event.preventDefault();\n\n    try {\n      const acc = await props.parent.state.reach.newAccountFromMnemonic(mnemonic); // check balance of account before funding\n\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n      console.log(\"Checking the balance of our imported account\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check if account can be funded from faucet\n\n      console.log(\"Checking if account can be funded from faucet.\");\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet();\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\"); // get faucet information\n\n        console.log(\"Getting faucet information\");\n        const faucet = await props.parent.state.reach.getFaucet();\n        console.log(\"Faucet information gotten successfuly\");\n        console.log(\"getting the balance of our faucet before funding\");\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)); // funding our account\n\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5));\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5));\n        console.log(\"Done funding our imported account\"); // check balance of account before funding\n\n        console.log(\"Checking the balance of our imported account after funding\");\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check balance of faucet after funding\n\n        console.log(\"getting the balance of our faucet after funding\");\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6));\n      } else {\n        console.log(\"Cannot fund from faucet\");\n      }\n\n      setMnemonicIsValid(true);\n      setIsImportSuccessful(true);\n      setTimeout(() => {\n        props.parent.addAccount(acc);\n      }, 3000);\n    } catch (err) {\n      setMnemonicIsValid(false);\n    }\n  };\n\n  const createNewAccount = async () => {\n    setStatus(Status.LOADING);\n\n    try {\n      // Create New Account\n      const acc = await props.parent.state.reach.createAccount();\n      console.log(props.parent.state.reach); // check balance of given Account\n\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n      console.log(\"Checking the balance of our new account\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check if account can be funded from faucet\n\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet(); // get faucet information\n\n      const faucet = await props.parent.state.reach.getFaucet();\n      console.log(\"Faucet gotten successfuly\");\n      console.log(faucet);\n      let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n      console.log(\"getting the balance of our faucet\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6));\n\n      if (canFundFromFaucet) {\n        console.log('Account can be funded from faucet'); // await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(0.5))\n      } // check balance of given Account after funding\n\n\n      balanceOfAcc = await props.parent.state.reach.balanceOf(acc);\n      console.log(\"Checking the balance of our new account after funding\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6)); // check balance of faucet after funding\n\n      balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet);\n      console.log(\"getting the balance of our faucet after funding\");\n      console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)); // Set this account as the global account\n\n      setAccount(acc);\n      console.log(acc); // update global state\n\n      setTimeout(() => {\n        setStatus(Status.CREATE_ACCOUNT);\n      }, 2000);\n    } catch (error) {\n      console.log(error);\n      alert('Something went wrong. Please try again later');\n      setStatus(Status.INTRO);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles.container} ${status === Status.LOADING ? styles.hide : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"subscribe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: status === Status.INTRO ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"No default account detected.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"To proceed, pick one of the options below\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn btn-primary ${styles.spacing}`,\n    onClick: () => setStatus(Status.IMPORT_ACCOUNT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, \"Import Existing Account\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn btn-primary ${styles.spacing}`,\n    onClick: createNewAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, \"Create New Account\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `col-md-12 ${status === Status.IMPORT_ACCOUNT ? '' : styles.hide}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"row form\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    onSubmit: event => handleImportAccount(mnemonic, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `col-12`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 47\n    }\n  }, \"Import Existing Account\")), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 92\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: `col-12 text-danger ${mnemonicIsValid ? styles.hide : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }, \"This mnemonic key does not exist. Check again and re-enter.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: `col-12 text-success ${isImportSuccessful ? '' : styles.hide}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, \"Account imported successfully.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-7 col-md-8 col-sm-12 form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: `${styles.textarea}`,\n    placeholder: \"Enter account mnemonic key phrases.\",\n    required: true,\n    value: mnemonic,\n    onChange: event => {\n      setMnemonic(event.target.value);\n      setMnemonicIsValid(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Import Account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1 sub-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: status === Status.CREATE_ACCOUNT ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading pointer\",\n    style: {\n      padding: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"New Account Created Successfully!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 28\n    }\n  }, \"Public Address:\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 51\n    }\n  }), \" \", account.getAddress ? account.getAddress() : ''))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn btn-primary ${styles.spacing}`,\n    onClick: () => props.parent.addAccount(account),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"Continue\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: status == Status.LOADING ? '' : styles.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    isLoading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CreateOrImportAccount;","map":{"version":3,"sources":["/home/paradoxfly/reach/bonding-curve-sale/src/components/CreateOrImportAccount/CreateOrImportAccount.js"],"names":["React","styles","useState","Loader","Provider","CreateOrImportAccount","props","Status","INTRO","IMPORT_ACCOUNT","CREATE_ACCOUNT","LOADING","status","setStatus","mnemonic","setMnemonic","mnemonicIsValid","setMnemonicIsValid","isImportSuccessful","setIsImportSuccessful","account","setAccount","handleImportAccount","event","preventDefault","acc","parent","state","reach","newAccountFromMnemonic","balanceOfAcc","balanceOf","console","log","formatCurrency","canFundFromFaucet","faucet","getFaucet","balanceOfFaucet","ballerina","fundFromFaucet","parseCurrency","setTimeout","addAccount","err","createNewAccount","createAccount","error","alert","container","hide","spacing","display","justifyContent","textarea","target","value","padding","getAddress"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from './CreateOrImportAccount.module.css'\nimport { useState } from 'react'\nimport Loader from '../Loader/Loader'\nimport { Provider } from '../../utils/constants'\nconst CreateOrImportAccount = (props) => {\n  const Status = {\n    INTRO: 'intro',\n    IMPORT_ACCOUNT: 'import account',\n    CREATE_ACCOUNT: 'create account',\n    LOADING: 'loading'\n  }\n  let [status, setStatus] = useState(Status.INTRO)\n  let [mnemonic, setMnemonic] = useState('')\n  let [mnemonicIsValid, setMnemonicIsValid] = useState(true)\n  let [isImportSuccessful, setIsImportSuccessful] = useState(false)\n  let [account, setAccount] = useState({})\n\n  const handleImportAccount = async (mnemonic, event) => {\n    event.preventDefault()\n    try {\n      const acc = await props.parent.state.reach.newAccountFromMnemonic(mnemonic)\n\n      // check balance of account before funding\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n      console.log(\"Checking the balance of our imported account\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n      // check if account can be funded from faucet\n      console.log(\"Checking if account can be funded from faucet.\")\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet()\n\n      if (canFundFromFaucet) {\n        console.log(\"Account can be funded from faucet.\")\n\n        // get faucet information\n        console.log(\"Getting faucet information\")\n        const faucet = await props.parent.state.reach.getFaucet()\n        console.log(\"Faucet information gotten successfuly\")\n\n        console.log(\"getting the balance of our faucet before funding\")\n        let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        let ballerina = props.parent.state.reach.formatCurrency(balanceOfFaucet, 6)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n        // funding our account\n        console.log(\"Funding our imported account. with \" + (ballerina - 0.5))\n        await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(ballerina - 0.5))\n        console.log(\"Done funding our imported account\")\n\n        // check balance of account before funding\n        console.log(\"Checking the balance of our imported account after funding\")\n        balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n        // check balance of faucet after funding\n        console.log(\"getting the balance of our faucet after funding\")\n        balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n        console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n      } else {\n        console.log(\"Cannot fund from faucet\")\n      }\n\n      setMnemonicIsValid(true)\n      setIsImportSuccessful(true)\n      setTimeout(() => {\n        props.parent.addAccount(acc)\n      }, 3000)\n    }\n    catch (err) {\n      setMnemonicIsValid(false)\n    }\n  }\n\n  const createNewAccount = async () => {\n    setStatus(Status.LOADING);\n    try {\n      // Create New Account\n      const acc = await props.parent.state.reach.createAccount();\n      console.log(props.parent.state.reach)\n\n      // check balance of given Account\n      let balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n      console.log(\"Checking the balance of our new account\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n      // check if account can be funded from faucet\n      const canFundFromFaucet = await props.parent.state.reach.canFundFromFaucet()\n\n      // get faucet information\n      const faucet = await props.parent.state.reach.getFaucet()\n      console.log(\"Faucet gotten successfuly\")\n      console.log(faucet)\n\n      let balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n      console.log(\"getting the balance of our faucet\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n      if (canFundFromFaucet) {\n        console.log('Account can be funded from faucet')\n        // await props.parent.state.reach.fundFromFaucet(acc, props.parent.state.reach.parseCurrency(0.5))\n      }\n\n      // check balance of given Account after funding\n      balanceOfAcc = await props.parent.state.reach.balanceOf(acc)\n      console.log(\"Checking the balance of our new account after funding\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfAcc, 6))\n\n      // check balance of faucet after funding\n      balanceOfFaucet = await props.parent.state.reach.balanceOf(faucet)\n      console.log(\"getting the balance of our faucet after funding\")\n      console.log(props.parent.state.reach.formatCurrency(balanceOfFaucet, 6))\n\n      // Set this account as the global account\n      setAccount(acc)\n      console.log(acc)\n\n      // update global state\n      setTimeout(() => {\n        setStatus(Status.CREATE_ACCOUNT);\n      }, 2000)\n    } catch (error) {\n      console.log(error)\n      alert('Something went wrong. Please try again later');\n      setStatus(Status.INTRO)\n    }\n  }\n\n  return (\n    <>\n      <div className={`${styles.container} ${status === Status.LOADING ? styles.hide : ''}`}>\n        <section className=\"subscribe\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <div className={status === Status.INTRO ? '' : styles.hide}>\n                    <div className=\"col-md-12\">\n                      <div className=\"heading pointer\">\n                        <h2>No default account detected.</h2>\n                        <br />\n                        <p>To proceed, pick one of the options below</p>\n                      </div>\n                    </div>\n                    <div className=\"col-12\">\n                      <button className={`btn btn-primary ${styles.spacing}`} onClick={() => setStatus(Status.IMPORT_ACCOUNT)} >\n                        Import Existing Account\n                      </button>\n                      <button className={`btn btn-primary ${styles.spacing}`} onClick={createNewAccount}>\n                        Create New Account\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className={`col-md-12 ${status === Status.IMPORT_ACCOUNT ? '' : styles.hide}`}>\n\n                    <form className=\"row form\" style={{ display: \"flex\", justifyContent: \"center\" }} onSubmit={(event) => handleImportAccount(mnemonic, event)}>\n                      <p className={`col-12`}><strong>Import Existing Account</strong></p> <br />\n                      <p className={`col-12 text-danger ${mnemonicIsValid ? styles.hide : ''}`}>This mnemonic key does not exist. Check again and re-enter.</p>\n                      <p className={`col-12 text-success ${isImportSuccessful ? '' : styles.hide}`}>Account imported successfully.</p>\n                      <div className=\"col-lg-7 col-md-8 col-sm-12 form-group\">\n                        <textarea\n                          className={`${styles.textarea}`}\n                          placeholder=\"Enter account mnemonic key phrases.\"\n                          required\n                          value={mnemonic}\n                          onChange={(event) => {\n                            setMnemonic(event.target.value);\n                            setMnemonicIsValid(true)\n                          }}\n                        >\n\n                        </textarea>\n                      </div>\n                      <div className=\"col-12\">\n                        <button className=\"btn btn-primary\">Import Account</button>\n                      </div>\n                      <div className=\"col-md-1 sub-hidden\"></div>\n                    </form>\n                  </div>\n\n                  <div className={status === Status.CREATE_ACCOUNT ? '' : styles.hide}>\n                    <div className=\"col-md-12\">\n                      <div className=\"heading pointer\" style={{ padding: '2rem' }}>\n                        <h2>New Account Created Successfully!</h2>\n                        <br />\n                        <p><b>Public Address:</b> <br /> {account.getAddress ? account.getAddress() : ''}</p>\n                      </div>\n                    </div>\n                    <div className=\"col-12\">\n                      <button className={`btn btn-primary ${styles.spacing}`} onClick={() => props.parent.addAccount(account)}>\n                        Continue\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n      <div className={status == Status.LOADING ? '' : styles.hide}>\n        <Loader isLoading={true} />\n      </div>\n    </>\n  )\n}\n\n\n\nexport default CreateOrImportAccount"]},"metadata":{},"sourceType":"module"}